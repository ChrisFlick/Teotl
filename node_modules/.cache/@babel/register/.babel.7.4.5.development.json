{
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "console.log('Hello World !!!');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRvZ2dpXFxkb2N1bWVudHNcXHRlb3RsXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZygnSGVsbG8gV29ybGQgISEhJyk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log"
      ],
      "mappings": "AAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
      "sourcesContent": [
        "console.log('Hello World !!!');"
      ]
    },
    "sourceType": "module",
    "mtime": 1561483860744
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _player = require(\"../objects/player.js\");\n\nvar _atomic = require(\"../objects/elementals/atomic.js\");\n\nvar _earth = require(\"../objects/elementals/earth.js\");\n\nvar _Water = require(\"../objects/elementals/Water.js\");\n\nvar _fire = require(\"../objects/elementals/fire.js\");\n\nvar _wind = require(\"../objects/elementals/wind.js\");\n\nvar _test = require(\"../scripts/test.js\");\n\nvar _enum = require(\"./enum.js\");\n\n(0, _test.test_damageShield)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBRUEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkb2dnaVxcZG9jdW1lbnRzXFx0ZW90bFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQbGF5ZXJ9IGZyb20gJy4uL29iamVjdHMvcGxheWVyLmpzJztcclxuXHJcbmltcG9ydCB7IEF0b21pY0MxLCBBdG9taWNDMiwgQXRvbWljQzMsIEF0b21pY0M0IH0gZnJvbSAnLi4vb2JqZWN0cy9lbGVtZW50YWxzL2F0b21pYy5qcyc7XHJcbmltcG9ydCB7IEVhcnRoQzEsIEVhcnRoQzIsIEVhcnRoQzMsIEVhcnRoQzQgfSBmcm9tICcuLi9vYmplY3RzL2VsZW1lbnRhbHMvZWFydGguanMnO1xyXG5pbXBvcnQgeyBXYXRlckMxLCBXYXRlckMyLCBXYXRlckMzLCBXYXRlckM0IH0gZnJvbSAnLi4vb2JqZWN0cy9lbGVtZW50YWxzL1dhdGVyLmpzJztcclxuaW1wb3J0IHsgRmlyZUMxLCBGaXJlQzIsIEZpcmVDMywgRmlyZUM0IH0gZnJvbSAnLi4vb2JqZWN0cy9lbGVtZW50YWxzL2ZpcmUuanMnO1xyXG5pbXBvcnQgeyBXaW5kQzEsIFdpbmRDMiwgV2luZEMzLCBXaW5kQzQgfSBmcm9tICcuLi9vYmplY3RzL2VsZW1lbnRhbHMvd2luZC5qcyc7XHJcblxyXG5pbXBvcnQgeyB0ZXN0X2RlZmVuc2UsIHRlc3RfYmFycmllciwgdGVzdF9saWZlTGVlY2gsIHRlc3RfaW50ZWxsaWdlbmNlLCB0ZXN0X2RhbWFnZVNoaWVsZCB9IGZyb20gJy4uL3NjcmlwdHMvdGVzdC5qcyc7XHJcbmltcG9ydCB7IHR5cGUgfSBmcm9tICcuL2VudW0uanMnO1xyXG5cclxudGVzdF9kYW1hZ2VTaGllbGQoKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
      "sourcesContent": [
        "import {Player} from '../objects/player.js';\r\n\r\nimport { AtomicC1, AtomicC2, AtomicC3, AtomicC4 } from '../objects/elementals/atomic.js';\r\nimport { EarthC1, EarthC2, EarthC3, EarthC4 } from '../objects/elementals/earth.js';\r\nimport { WaterC1, WaterC2, WaterC3, WaterC4 } from '../objects/elementals/Water.js';\r\nimport { FireC1, FireC2, FireC3, FireC4 } from '../objects/elementals/fire.js';\r\nimport { WindC1, WindC2, WindC3, WindC4 } from '../objects/elementals/wind.js';\r\n\r\nimport { test_defense, test_barrier, test_lifeLeech, test_intelligence, test_damageShield } from '../scripts/test.js';\r\nimport { type } from './enum.js';\r\n\r\ntest_damageShield();"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346005343
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\\\\atomic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
        "sourceFileName": "atomic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atomic = void 0;\n\nvar _elemental = require(\"../elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Atomic =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Atomic, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Atomic() {\n    var _this;\n\n    _classCallCheck(this, Atomic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Atomic).call(this));\n    _this._type = 0;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Atomic;\n}(_elemental.Elemental);\n\nexports.Atomic = Atomic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pYy5qcyJdLCJuYW1lcyI6WyJBdG9taWMiLCJfdHlwZSIsIkVsZW1lbnRhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLE07Ozs7O0FBQ1o7OztBQUlBLG9CQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFFQSxVQUFLQyxLQUFMLEdBQWEsQ0FBYjtBQUhhO0FBSWI7QUFFRDs7OztBQUlBOzs7O0FBSUE7Ozs7OztFQW5CMkJDLG9CIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGF0b21pYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRhbCB9IGZyb20gJy4uL2VsZW1lbnRhbC5qcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgQXRvbWljIGV4dGVuZHMgRWxlbWVudGFsIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cclxuXHRcdHRoaXMuX3R5cGUgPSAwO1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "atomic.js"
      ],
      "names": [
        "Atomic",
        "_type",
        "Elemental"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,UAAKC,KAAL,GAAa,CAAb;AAHa;AAIb;AAED;;;;AAIA;;;;AAIA;;;;;;EAnB2BC,oB",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "sourcesContent": [
        "import { Elemental } from '../elemental.js';\r\n\r\nexport class Atomic extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._type = 0;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561491786081
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\elemental.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\elemental.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\elemental.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\elemental.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "elemental.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Elemental = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Elemental =\n/*#__PURE__*/\nfunction () {\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Elemental() {\n    _classCallCheck(this, Elemental);\n\n    this._buff = [// Main Stats\n    0, // Strength\n    0, // Constitution\n    0, // Inteligence\n    0, // Agility\n    // Secondary Stats\n    0, // Defense\n    0];\n    this._buffTime = [];\n\n    for (var i = 0; i < this._buff.length; i++) {\n      // Initiates the timer for every buff at 0.\n      this._buffTime.push(0);\n    } // Secondary stats\n\n\n    this._health = 0;\n    this._barrier = 0;\n    this._baseDamageShield = 0;\n    this.doubleStrike = false;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n\n  _createClass(Elemental, [{\n    key: \"getType\",\n\n    /*********************\r\n    ****** Methods *******\r\n       *********************/\n    value: function getType() {\n      // Gives string of type \n      return Object.keys(_enum.type)[this.type];\n    }\n  }, {\n    key: \"attack\",\n    value: function attack(enemy) {\n      // Attack enemy Elemental's health\n      var initialDmg = this.calculateDmg(enemy);\n      var dmg = initialDmg - enemy.barrier; // Subtracts Enemy Elementals Barrier from Damage.\n\n      enemy.barrier -= initialDmg; // Subtracts Damage done to Enemy Elementals Barrier.\n\n      if (dmg < 0) {\n        // Ensures that intended Damage does not Heal.\n        dmg = 0;\n      }\n\n      if (enemy.barrier < 0) {\n        // Ensures that Enemy's Barrier is not a negateive.\n        enemy.barrier = 0;\n      }\n\n      console.log(\"Attacking \".concat(enemy.getType(), \" for \").concat(dmg, \" Damage.\"));\n      enemy.health -= dmg; // Inflicts Damage onto the Enemy Elemental.\n\n      if (enemy.damageShield > 0) {\n        var enemyType = enemy.type;\n\n        if (enemy.buff[_enum.stat.damageShield] > 0) {\n          enemyType = enemy.shieldType;\n        }\n\n        dmg = Math.round(enemy.damageShield * enemy.multiplier(enemyType, this.type));\n        console.log(\"Taking \".concat(dmg, \" Damage from Damage Shield\"));\n        this.health -= dmg; // Take damage if enemy has a Damage Shield\n      }\n    }\n  }, {\n    key: \"calculateDmg\",\n    value: function calculateDmg(enemy) {\n      // Calculates damage.\n      var dmg = Math.round(this.damage * this.multiplier(this.type, enemy.type) - enemy.defense);\n\n      if (dmg < 0) {\n        dmg = 0;\n      }\n\n      return dmg;\n    }\n  }, {\n    key: \"multiplier\",\n    value: function multiplier(playerType, enemyType) {\n      // Decides multiplier based on weakness\n      var multiplier = 1;\n      var weak;\n\n      switch (playerType) {\n        case _enum.type.atomic:\n          switch (enemyType) {\n            case _enum.type.earth:\n              multiplier = _enum.weakness.strong;\n              weak = 'Strong';\n              break;\n\n            case _enum.type.water:\n              multiplier = _enum.weakness.weak;\n              weak = 'Weak';\n              break;\n\n            case _enum.type.fire:\n              multiplier = _enum.weakness.weak;\n              weak = 'Weak';\n              break;\n\n            case _enum.type.wind:\n              multiplier = _enum.weakness.strong;\n              weak = 'Strong';\n              break;\n          }\n\n          break;\n\n        case _enum.type.earth:\n          switch (enemyType) {\n            case _enum.type.atomic:\n              multiplier = _enum.weakness.trivial;\n              weak = 'Trivial';\n              break;\n\n            case _enum.type.water:\n              multiplier = _enum.weakness.strong;\n              weak = 'Strong';\n              break;\n\n            case _enum.type.fire:\n              multiplier = _enum.weakness.good;\n              break;\n\n            case _enum.type.wind:\n              multiplier = _enum.weakness.weak;\n              weak = 'Weak';\n              break;\n          }\n\n          break;\n\n        case _enum.type.water:\n          switch (enemyType) {\n            case _enum.type.atomic:\n              multiplier = _enum.weakness.good;\n              weak = 'Good';\n              break;\n\n            case _enum.type.earth:\n              multiplier = _enum.weakness.trivial;\n              weak = 'Trivial';\n              break;\n\n            case _enum.type.fire:\n              multiplier = _enum.weakness.strong;\n              weak = 'Strong';\n              break;\n\n            case _enum.type.wind:\n              multiplier = _enum.weakness.weak;\n              weak = 'Weak';\n              break;\n          }\n\n          break;\n\n        case _enum.type.fire:\n          switch (enemyType) {\n            case _enum.type.atomic:\n              multiplier = _enum.weakness.good;\n              weak = 'Good';\n              break;\n\n            case _enum.type.earth:\n              multiplier = _enum.weakness.weak;\n              weak = 'Weak';\n              break;\n\n            case _enum.type.water:\n              multiplier = _enum.weakness.trivial;\n              weak = 'Trivial';\n              break;\n\n            case _enum.type.wind:\n              multiplier = _enum.weakness.strong;\n              weak = 'Strong';\n              break;\n          }\n\n          break;\n\n        case _enum.type.wind:\n          switch (enemyType) {\n            case _enum.type.atomic:\n              multiplier = _enum.weakness.trivial;\n              weak = 'Trivial';\n              break;\n\n            case _enum.type.earth:\n              multiplier = _enum.weakness.good;\n              weak = 'Good';\n              break;\n\n            case _enum.type.water:\n              multiplier = _enum.weakness.good;\n              weak = 'Good';\n              break;\n\n            case _enum.type.fire:\n              multiplier = _enum.weakness.trivial;\n              weak = 'Trivial';\n              break;\n          }\n\n          break;\n\n        default:\n          multiplier = 1;\n      }\n\n      if (weak != null) {\n        console.log(\"\".concat(this.getType(), \"'s attack is \").concat(weak));\n      }\n\n      return multiplier;\n    }\n  }, {\n    key: \"resetBuffs\",\n    value: function resetBuffs() {\n      // Checks the timer of each buff and resets them to 0 if their timer is up.\n      for (var i = 0; i < this.buff.length; i++) {\n        if (this.buffTime[i] > 0) {\n          buffTime[i]--;\n        } else {\n          buff[i] = 0;\n        }\n      }\n    }\n  }, {\n    key: \"ability\",\n    value: function ability(player, enemy) {} // Certain Elementals have extra stats or altered attacks; this ensures there are no errors with .ability() is called on them.\n    // For testing purposes:\n\n  }, {\n    key: \"listStats\",\n    value: function listStats() {\n      // Lists all stats.\n      console.log(\"\\n            Name: \".concat(this.name, \"\\n            Type: \").concat(this.getType(), \"\\n\\n            Max Health: \").concat(this.maxHealth, \"\\n            Current Health: \").concat(this.health, \"\\n\\n            Strength: \").concat(this.strength, \"\\n            Constitution: \").concat(this.constitution, \"\\n            Inteligence: \").concat(this.inteligence, \"\\n            Agility: \").concat(this.agility, \"\\n\\n            Damage: \").concat(this.damage, \"\\n            Speed: \").concat(this.speed, \"\\n\\n            Defense: \").concat(this.defense, \"\\n            Ability Mod: \").concat(this.abilityMod, \"\\n        \"));\n    }\n  }, {\n    key: \"logHealth\",\n    value: function logHealth() {\n      console.log(\"\".concat(this.getType(), \" \").concat(this.name, \" Health: \").concat(this.health));\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      // Name of Elemental\n      return this._name;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      // Elementals type\n      return this._type;\n    }\n  }, {\n    key: \"shieldType\",\n    get: function get() {\n      // Elemental type of damage shield\n      return this._shieldType;\n    } // Arrays\n    ,\n\n    /*********************\r\n    ****** Setters *******\r\n       *********************/\n    set: function set(type) {\n      if (type === type.atomic || type === type.fire || type === type.water || type === type.earth || type === type.wind) {\n        this._shieldType = type;\n      } else {\n        throw new TypeError(\"Invalid Input; Type must match type.x in enum.js\");\n      }\n    } // Arrays\n\n  }, {\n    key: \"buff\",\n    get: function get() {\n      return this._buff;\n    },\n    set: function set(stat) {\n      this._buff = stat;\n    }\n  }, {\n    key: \"buffTime\",\n    get: function get() {\n      return this._buffTime;\n    } // stats\n    ,\n    set: function set(t) {\n      this._buffTime = t;\n    } // Main Stats\n\n  }, {\n    key: \"strength\",\n    get: function get() {\n      // Used in Damage calculations\n      return this._baseStrength + this._buff[_enum.stat.strength];\n    },\n    set: function set(buff) {\n      // Sets the Elementals Strength Buff (Does not affect Base Strength)\n      if (typeof buff === 'number') {\n        this._buff[_enum.stat.strength] = buff;\n      } else {\n        throw new TypeError(\"Invalid Input; Strength must be a number\");\n      }\n    }\n  }, {\n    key: \"constitution\",\n    get: function get() {\n      // Used to calculate Damage and Defense\n      return this._baseConstitution + this._buff[_enum.stat.constitution];\n    },\n    set: function set(buff) {\n      // Sets the Elementals Constitution Buff (Does not affect Base Constitution)\n      if (typeof buff === 'number') {\n        this._buff[_enum.stat.constitution] = buff;\n      } else {\n        throw new TypeError(\"Invalid Input; Strength must be a number\");\n      }\n    }\n  }, {\n    key: \"inteligence\",\n    get: function get() {\n      // Used to calculate Ability Modifier\n      return this._baseInteligence + this._buff[_enum.stat.inteligence];\n    },\n    set: function set(buff) {\n      // Sets the Elementals Inteligence Buff (Does not affect Base Inteligence)\n      if (typeof buff === 'number') {\n        this._buff[_enum.stat.inteligence] = buff;\n      } else {\n        throw new TypeError(\"Invalid Input; Strength must be a number\");\n      }\n    }\n  }, {\n    key: \"agility\",\n    get: function get() {\n      // Used to calculate Speed.\n      return this._baseAgility + this._buff[_enum.stat.agility];\n    } // Calculated stats\n    ,\n    set: function set(buff) {\n      // Sets the Elementals agility Buff (Does not affect Base Agility)\n      if (typeof buff === 'number') {\n        this._buff[_enum.stat.agility] = buff;\n      } else {\n        throw new TypeError(\"Invalid Input; Strength must be a number\");\n      }\n    } // Secondary Stats\n\n  }, {\n    key: \"damage\",\n    get: function get() {\n      return this.strength;\n    }\n  }, {\n    key: \"speed\",\n    get: function get() {\n      // Used to see which Elemental goes first.\n      return this.agility;\n    }\n  }, {\n    key: \"maxHealth\",\n    get: function get() {\n      // Maximum Health for the Elemental\n      return this.constitution * 5;\n    }\n  }, {\n    key: \"health\",\n    get: function get() {\n      // Current Health of the Elemental\n      return this._health;\n    },\n    set: function set(h) {\n      if (typeof h === 'number') {\n        if (h > 0) {\n          this._health = h;\n        } else {\n          this._health = 0;\n        }\n      } else {\n        throw new TypeError(\"Invalid Input; Health must be a number.\");\n      }\n    }\n  }, {\n    key: \"defense\",\n    get: function get() {\n      // Mitigates Damage.\n      return Math.round(this.constitution * 0.25 + this._buff[_enum.stat.defense]);\n    },\n    set: function set(buff) {\n      // Sets the Elementals defense Buff (Does not affect Base Defense)\n      if (typeof buff === 'number') {\n        this._buff[_enum.stat.defense] = buff;\n      } else {\n        throw new TypeError(\"Invalid Input; Defense must be a number\");\n      }\n    }\n  }, {\n    key: \"abilityMod\",\n    get: function get() {\n      // Used to modify various Elemental Abilities.\n      return this.inteligence * 0.1;\n    }\n  }, {\n    key: \"damageShield\",\n    get: function get() {\n      // Causes Damage to attacking Elemental.\n      var shield = Math.round(this._baseDamageShield + this._buff[_enum.stat.damageShield]);\n\n      if (shield < 0) {\n        return 0;\n      } else {\n        return shield;\n      }\n    },\n    set: function set(buff) {\n      // Sets the Elementals Damage Shield Buff (Does not affect Base Damage Shield)\n      this._buff[_enum.stat.damageShield] = buff;\n    }\n  }, {\n    key: \"barrier\",\n    get: function get() {\n      // Mitigates Damage then is removed based on damage .\n      return this._barrier;\n    },\n    set: function set(buff) {\n      // Sets Barrier Buff\n      if (typeof buff === 'number') {\n        this._barrier = buff;\n\n        if (this.barrier < 0) {\n          this.barrier = 0;\n        }\n      } else {\n        throw new TypeError(\"Invalid Input; Barrier must be a number\");\n      }\n    }\n  }]);\n\n  return Elemental;\n}();\n\nexports.Elemental = Elemental;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVsZW1lbnRhbC5qcyJdLCJuYW1lcyI6WyJFbGVtZW50YWwiLCJfYnVmZiIsIl9idWZmVGltZSIsImkiLCJsZW5ndGgiLCJwdXNoIiwiX2hlYWx0aCIsIl9iYXJyaWVyIiwiX2Jhc2VEYW1hZ2VTaGllbGQiLCJkb3VibGVTdHJpa2UiLCJPYmplY3QiLCJrZXlzIiwidHlwZSIsImVuZW15IiwiaW5pdGlhbERtZyIsImNhbGN1bGF0ZURtZyIsImRtZyIsImJhcnJpZXIiLCJjb25zb2xlIiwibG9nIiwiZ2V0VHlwZSIsImhlYWx0aCIsImRhbWFnZVNoaWVsZCIsImVuZW15VHlwZSIsImJ1ZmYiLCJzdGF0Iiwic2hpZWxkVHlwZSIsIk1hdGgiLCJyb3VuZCIsIm11bHRpcGxpZXIiLCJkYW1hZ2UiLCJkZWZlbnNlIiwicGxheWVyVHlwZSIsIndlYWsiLCJhdG9taWMiLCJlYXJ0aCIsIndlYWtuZXNzIiwic3Ryb25nIiwid2F0ZXIiLCJmaXJlIiwid2luZCIsInRyaXZpYWwiLCJnb29kIiwiYnVmZlRpbWUiLCJwbGF5ZXIiLCJuYW1lIiwibWF4SGVhbHRoIiwic3RyZW5ndGgiLCJjb25zdGl0dXRpb24iLCJpbnRlbGlnZW5jZSIsImFnaWxpdHkiLCJzcGVlZCIsImFiaWxpdHlNb2QiLCJfbmFtZSIsIl90eXBlIiwiX3NoaWVsZFR5cGUiLCJUeXBlRXJyb3IiLCJ0IiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsImgiLCJzaGllbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7SUFFYUEsUzs7O0FBQ1o7OztBQUlBLHVCQUFjO0FBQUE7O0FBRVAsU0FBS0MsS0FBTCxHQUFhLENBQ1Q7QUFDQSxLQUZTLEVBRU47QUFDSCxLQUhTLEVBR047QUFDSCxLQUpTLEVBSU47QUFDSCxLQUxTLEVBS047QUFFSDtBQUNBLEtBUlMsRUFRTjtBQUNILEtBVFMsQ0FBYjtBQWFBLFNBQUtD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QWlGZ0J2QyxJLEVBQU07QUFBRTtBQUNyQixXQUFLdkIsS0FBTCxDQUFXd0IsV0FBS0gsWUFBaEIsSUFBZ0NFLElBQWhDO0FBQ0g7Ozt3QkFqRmE7QUFBRTtBQUNaLGFBQU8sS0FBS2pCLFFBQVo7QUFDSCxLO3NCQWlGV2lCLEksRUFBTTtBQUFFO0FBQ2hCLFVBQUksT0FBT0EsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtBQUMxQixhQUFLakIsUUFBTCxHQUFnQmlCLElBQWhCOztBQUVBLFlBQUksS0FBS1AsT0FBTCxHQUFlLENBQW5CLEVBQXNCO0FBQ2xCLGVBQUtBLE9BQUwsR0FBZSxDQUFmO0FBQ0g7QUFDSixPQU5ELE1BTU87QUFDSCxjQUFNLElBQUl1QyxTQUFKLDJDQUFOO0FBQ0g7QUFDSiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRvZ2dpXFxkb2N1bWVudHNcXHRlb3RsXFxvYmplY3RzXFxlbGVtZW50YWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSwgd2Vha25lc3MsIHN0YXQgfSBmcm9tICcuLi8uLi9zcmMvZW51bS5qcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRWxlbWVudGFsIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5fYnVmZiA9IFtcclxuICAgICAgICAgICAgLy8gTWFpbiBTdGF0c1xyXG4gICAgICAgICAgICAwLCAvLyBTdHJlbmd0aFxyXG4gICAgICAgICAgICAwLCAvLyBDb25zdGl0dXRpb25cclxuICAgICAgICAgICAgMCwgLy8gSW50ZWxpZ2VuY2VcclxuICAgICAgICAgICAgMCwgLy8gQWdpbGl0eVxyXG5cclxuICAgICAgICAgICAgLy8gU2Vjb25kYXJ5IFN0YXRzXHJcbiAgICAgICAgICAgIDAsIC8vIERlZmVuc2VcclxuICAgICAgICAgICAgMCwgLy8gRGFtYWdlIFNoaWVsZFxyXG4gICAgICAgIF07XHJcblxyXG5cclxuICAgICAgICB0aGlzLl9idWZmVGltZSA9IFtdXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9idWZmLmxlbmd0aDsgaSsrKSB7IC8vIEluaXRpYXRlcyB0aGUgdGltZXIgZm9yIGV2ZXJ5IGJ1ZmYgYXQgMC5cclxuICAgICAgICAgICAgdGhpcy5fYnVmZlRpbWUucHVzaCgwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNlY29uZGFyeSBzdGF0c1xyXG4gICAgICAgIHRoaXMuX2hlYWx0aCA9IDA7XHJcbiAgICAgICAgdGhpcy5fYmFycmllciA9IDA7XHJcbiAgICAgICAgdGhpcy5fYmFzZURhbWFnZVNoaWVsZCA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuZG91YmxlU3RyaWtlID0gZmFsc2U7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcbiAgICBnZXQgbmFtZSgpIHsgLy8gTmFtZSBvZiBFbGVtZW50YWxcclxuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgdHlwZSgpIHsgLy8gRWxlbWVudGFscyB0eXBlXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3R5cGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHNoaWVsZFR5cGUoKSB7IC8vIEVsZW1lbnRhbCB0eXBlIG9mIGRhbWFnZSBzaGllbGRcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2hpZWxkVHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBcclxuICAgIC8vIEFycmF5c1xyXG4gICAgZ2V0IGJ1ZmYoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmY7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGJ1ZmZUaW1lKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9idWZmVGltZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBzdGF0c1xyXG4gICAgZ2V0IHN0cmVuZ3RoKCkgeyAvLyBVc2VkIGluIERhbWFnZSBjYWxjdWxhdGlvbnNcclxuICAgICAgICByZXR1cm4gdGhpcy5fYmFzZVN0cmVuZ3RoICsgdGhpcy5fYnVmZltzdGF0LnN0cmVuZ3RoXTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgY29uc3RpdHV0aW9uKCkgeyAvLyBVc2VkIHRvIGNhbGN1bGF0ZSBEYW1hZ2UgYW5kIERlZmVuc2VcclxuICAgICAgICByZXR1cm4gdGhpcy5fYmFzZUNvbnN0aXR1dGlvbiArIHRoaXMuX2J1ZmZbc3RhdC5jb25zdGl0dXRpb25dO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbnRlbGlnZW5jZSgpIHsgLy8gVXNlZCB0byBjYWxjdWxhdGUgQWJpbGl0eSBNb2RpZmllclxyXG4gICAgICAgIHJldHVybiB0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgKyB0aGlzLl9idWZmW3N0YXQuaW50ZWxpZ2VuY2VdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBhZ2lsaXR5KCkgeyAvLyBVc2VkIHRvIGNhbGN1bGF0ZSBTcGVlZC5cclxuICAgICAgICByZXR1cm4gdGhpcy5fYmFzZUFnaWxpdHkgKyB0aGlzLl9idWZmW3N0YXQuYWdpbGl0eV07XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlZCBzdGF0c1xyXG5cclxuICAgIGdldCBkYW1hZ2UoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RyZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHNwZWVkKCkgeyAvLyBVc2VkIHRvIHNlZSB3aGljaCBFbGVtZW50YWwgZ29lcyBmaXJzdC5cclxuICAgICAgICByZXR1cm4gdGhpcy5hZ2lsaXR5O1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBtYXhIZWFsdGgoKSB7IC8vIE1heGltdW0gSGVhbHRoIGZvciB0aGUgRWxlbWVudGFsXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RpdHV0aW9uICogNTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaGVhbHRoKCkgeyAvLyBDdXJyZW50IEhlYWx0aCBvZiB0aGUgRWxlbWVudGFsXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hlYWx0aDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZGVmZW5zZSgpIHsgLy8gTWl0aWdhdGVzIERhbWFnZS5cclxuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCgodGhpcy5jb25zdGl0dXRpb24gKiAwLjI1KSArIHRoaXMuX2J1ZmZbc3RhdC5kZWZlbnNlXSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGFiaWxpdHlNb2QoKSB7IC8vIFVzZWQgdG8gbW9kaWZ5IHZhcmlvdXMgRWxlbWVudGFsIEFiaWxpdGllcy5cclxuICAgICAgICByZXR1cm4gdGhpcy5pbnRlbGlnZW5jZSAqIDAuMTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZGFtYWdlU2hpZWxkKCkgeyAvLyBDYXVzZXMgRGFtYWdlIHRvIGF0dGFja2luZyBFbGVtZW50YWwuXHJcbiAgICAgICAgbGV0IHNoaWVsZCA9IE1hdGgucm91bmQodGhpcy5fYmFzZURhbWFnZVNoaWVsZCArIHRoaXMuX2J1ZmZbc3RhdC5kYW1hZ2VTaGllbGRdKTtcclxuXHJcbiAgICAgICAgaWYgKHNoaWVsZCA8IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBzaGllbGQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBiYXJyaWVyKCkgeyAvLyBNaXRpZ2F0ZXMgRGFtYWdlIHRoZW4gaXMgcmVtb3ZlZCBiYXNlZCBvbiBkYW1hZ2UgLlxyXG4gICAgICAgIHJldHVybiB0aGlzLl9iYXJyaWVyO1xyXG4gICAgfVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG4gICAgKioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuICAgIHNldCBzaGllbGRUeXBlKHR5cGUpIHtcclxuICAgICAgICBpZiAodHlwZSA9PT0gdHlwZS5hdG9taWMgfHwgdHlwZSA9PT0gdHlwZS5maXJlIHx8IHR5cGUgPT09IHR5cGUud2F0ZXIgfHwgdHlwZSA9PT0gdHlwZS5lYXJ0aCB8fCB0eXBlID09PSB0eXBlLndpbmQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hpZWxkVHlwZSA9IHR5cGU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBJbnB1dDsgVHlwZSBtdXN0IG1hdGNoIHR5cGUueCBpbiBlbnVtLmpzYCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEFycmF5c1xyXG4gICAgc2V0IGJ1ZmYoc3RhdCkge1xyXG4gICAgICAgIHRoaXMuX2J1ZmYgPSBzdGF0O1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBidWZmVGltZSh0KSB7XHJcbiAgICAgICAgdGhpcy5fYnVmZlRpbWUgPSB0O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1haW4gU3RhdHNcclxuICAgIHNldCBzdHJlbmd0aChidWZmKSB7IC8vIFNldHMgdGhlIEVsZW1lbnRhbHMgU3RyZW5ndGggQnVmZiAoRG9lcyBub3QgYWZmZWN0IEJhc2UgU3RyZW5ndGgpXHJcbiAgICAgICAgaWYgKHR5cGVvZiBidWZmID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICB0aGlzLl9idWZmW3N0YXQuc3RyZW5ndGhdID0gYnVmZjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIElucHV0OyBTdHJlbmd0aCBtdXN0IGJlIGEgbnVtYmVyYCk7XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuXHJcbiAgICBzZXQgY29uc3RpdHV0aW9uKGJ1ZmYpIHsgLy8gU2V0cyB0aGUgRWxlbWVudGFscyBDb25zdGl0dXRpb24gQnVmZiAoRG9lcyBub3QgYWZmZWN0IEJhc2UgQ29uc3RpdHV0aW9uKVxyXG4gICAgICAgIGlmICh0eXBlb2YgYnVmZiA9PT0gJ251bWJlcicpIHtcclxuICAgICAgICAgICAgdGhpcy5fYnVmZltzdGF0LmNvbnN0aXR1dGlvbl0gPSBidWZmO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQgSW5wdXQ7IFN0cmVuZ3RoIG11c3QgYmUgYSBudW1iZXJgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGludGVsaWdlbmNlKGJ1ZmYpIHsgLy8gU2V0cyB0aGUgRWxlbWVudGFscyBJbnRlbGlnZW5jZSBCdWZmIChEb2VzIG5vdCBhZmZlY3QgQmFzZSBJbnRlbGlnZW5jZSlcclxuICAgICAgICBpZiAodHlwZW9mIGJ1ZmYgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1ZmZbc3RhdC5pbnRlbGlnZW5jZV0gPSBidWZmO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQgSW5wdXQ7IFN0cmVuZ3RoIG11c3QgYmUgYSBudW1iZXJgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGFnaWxpdHkoYnVmZikgeyAvLyBTZXRzIHRoZSBFbGVtZW50YWxzIGFnaWxpdHkgQnVmZiAoRG9lcyBub3QgYWZmZWN0IEJhc2UgQWdpbGl0eSlcclxuICAgICAgICBpZiAodHlwZW9mIGJ1ZmYgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2J1ZmZbc3RhdC5hZ2lsaXR5XSA9IGJ1ZmY7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBJbnB1dDsgU3RyZW5ndGggbXVzdCBiZSBhIG51bWJlcmApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBTZWNvbmRhcnkgU3RhdHNcclxuICAgIHNldCBoZWFsdGgoaCkgeyBcclxuICAgICAgICBpZiAodHlwZW9mIGggPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgIGlmIChoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faGVhbHRoID0gaDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2hlYWx0aCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIElucHV0OyBIZWFsdGggbXVzdCBiZSBhIG51bWJlci5gKTtcclxuICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgIHNldCBkZWZlbnNlKGJ1ZmYpIHsgLy8gU2V0cyB0aGUgRWxlbWVudGFscyBkZWZlbnNlIEJ1ZmYgKERvZXMgbm90IGFmZmVjdCBCYXNlIERlZmVuc2UpXHJcbiAgICAgICAgaWYgKHR5cGVvZiBidWZmID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICB0aGlzLl9idWZmW3N0YXQuZGVmZW5zZV0gPSBidWZmO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQgSW5wdXQ7IERlZmVuc2UgbXVzdCBiZSBhIG51bWJlcmApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZXQgZGFtYWdlU2hpZWxkKGJ1ZmYpIHsgLy8gU2V0cyB0aGUgRWxlbWVudGFscyBEYW1hZ2UgU2hpZWxkIEJ1ZmYgKERvZXMgbm90IGFmZmVjdCBCYXNlIERhbWFnZSBTaGllbGQpXHJcbiAgICAgICAgdGhpcy5fYnVmZltzdGF0LmRhbWFnZVNoaWVsZF0gPSBidWZmO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBiYXJyaWVyKGJ1ZmYpIHsgLy8gU2V0cyBCYXJyaWVyIEJ1ZmZcclxuICAgICAgICBpZiAodHlwZW9mIGJ1ZmYgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2JhcnJpZXIgPSBidWZmO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuYmFycmllciA8IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYmFycmllciA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIElucHV0OyBCYXJyaWVyIG11c3QgYmUgYSBudW1iZXJgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcbiAgICAqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG4gICAgZ2V0VHlwZSgpIHsgLy8gR2l2ZXMgc3RyaW5nIG9mIHR5cGUgXHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHR5cGUpW3RoaXMudHlwZV07XHJcbiAgICB9XHJcblxyXG4gICAgYXR0YWNrKGVuZW15KSB7IC8vIEF0dGFjayBlbmVteSBFbGVtZW50YWwncyBoZWFsdGhcclxuICAgICAgICAgICAgbGV0IGluaXRpYWxEbWcgPSB0aGlzLmNhbGN1bGF0ZURtZyhlbmVteSkgXHJcbiAgICAgICAgICAgIGxldCBkbWcgPSBpbml0aWFsRG1nIC0gZW5lbXkuYmFycmllcjsgLy8gU3VidHJhY3RzIEVuZW15IEVsZW1lbnRhbHMgQmFycmllciBmcm9tIERhbWFnZS5cclxuXHJcbiAgICAgICAgICAgIGVuZW15LmJhcnJpZXIgLT0gaW5pdGlhbERtZzsgLy8gU3VidHJhY3RzIERhbWFnZSBkb25lIHRvIEVuZW15IEVsZW1lbnRhbHMgQmFycmllci5cclxuXHJcbiAgICAgICAgICAgIGlmIChkbWcgPCAwKSB7IC8vIEVuc3VyZXMgdGhhdCBpbnRlbmRlZCBEYW1hZ2UgZG9lcyBub3QgSGVhbC5cclxuICAgICAgICAgICAgICAgIGRtZyA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAgICBpZiAoZW5lbXkuYmFycmllciA8IDApIHsgLy8gRW5zdXJlcyB0aGF0IEVuZW15J3MgQmFycmllciBpcyBub3QgYSBuZWdhdGVpdmUuXHJcbiAgICAgICAgICAgICAgICBlbmVteS5iYXJyaWVyID0gMDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc29sZS5sb2coYEF0dGFja2luZyAke2VuZW15LmdldFR5cGUoKX0gZm9yICR7ZG1nfSBEYW1hZ2UuYCk7XHJcbiAgICAgICAgICAgIGVuZW15LmhlYWx0aCAtPSBkbWc7IC8vIEluZmxpY3RzIERhbWFnZSBvbnRvIHRoZSBFbmVteSBFbGVtZW50YWwuXHJcblxyXG5cclxuICAgICAgICAgICAgaWYgKGVuZW15LmRhbWFnZVNoaWVsZCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGxldCBlbmVteVR5cGUgPSBlbmVteS50eXBlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGVuZW15LmJ1ZmZbc3RhdC5kYW1hZ2VTaGllbGRdID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVuZW15VHlwZSA9IGVuZW15LnNoaWVsZFR5cGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgZG1nID0gTWF0aC5yb3VuZChlbmVteS5kYW1hZ2VTaGllbGQgKiBlbmVteS5tdWx0aXBsaWVyKGVuZW15VHlwZSwgdGhpcy50eXBlKSk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgVGFraW5nICR7ZG1nfSBEYW1hZ2UgZnJvbSBEYW1hZ2UgU2hpZWxkYCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhlYWx0aCAtPSBkbWc7IC8vIFRha2UgZGFtYWdlIGlmIGVuZW15IGhhcyBhIERhbWFnZSBTaGllbGRcclxuICAgICAgICAgICAgfSAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgY2FsY3VsYXRlRG1nKGVuZW15KSB7IC8vIENhbGN1bGF0ZXMgZGFtYWdlLlxyXG4gICAgICAgIGxldCBkbWcgPSBNYXRoLnJvdW5kKCh0aGlzLmRhbWFnZSAqIHRoaXMubXVsdGlwbGllcih0aGlzLnR5cGUsIGVuZW15LnR5cGUpKSAtIGVuZW15LmRlZmVuc2UpO1xyXG5cclxuICAgICAgICBpZiAoZG1nIDwgMCkge1xyXG4gICAgICAgICAgICBkbWcgPSAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGRtZztcclxuICAgIH1cclxuXHJcbiAgICBtdWx0aXBsaWVyKHBsYXllclR5cGUsIGVuZW15VHlwZSkgeyAvLyBEZWNpZGVzIG11bHRpcGxpZXIgYmFzZWQgb24gd2Vha25lc3NcclxuICAgICAgICBsZXQgbXVsdGlwbGllciA9IDE7XHJcbiAgICAgICAgbGV0IHdlYWs7XHJcbiAgICAgICAgXHJcbiAgICAgICAgc3dpdGNoIChwbGF5ZXJUeXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgdHlwZS5hdG9taWM6XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGVuZW15VHlwZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS5lYXJ0aDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLnN0cm9uZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdTdHJvbmcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUud2F0ZXI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy53ZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3ZWFrID0gJ1dlYWsnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUuZmlyZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLndlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnV2Vhayc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS53aW5kOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsaWVyID0gd2Vha25lc3Muc3Ryb25nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3ZWFrID0gJ1N0cm9uZyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgdHlwZS5lYXJ0aDpcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZW5lbXlUeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSB0eXBlLmF0b21pYzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLnRyaXZpYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnVHJpdmlhbCc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS53YXRlcjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLnN0cm9uZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdTdHJvbmcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUuZmlyZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLmdvb2Q7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS53aW5kOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsaWVyID0gd2Vha25lc3Mud2VhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdXZWFrJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSB0eXBlLndhdGVyOlxyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChlbmVteVR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUuYXRvbWljOlxyXG4gICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy5nb29kO1xyXG4gICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnR29vZCc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIHR5cGUuZWFydGg6XHJcbiAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLnRyaXZpYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdUcml2aWFsJztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgdHlwZS5maXJlOlxyXG4gICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy5zdHJvbmc7XHJcbiAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdTdHJvbmcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSB0eXBlLndpbmQ6XHJcbiAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLndlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdXZWFrJztcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIHR5cGUuZmlyZTpcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZW5lbXlUeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSB0eXBlLmF0b21pYzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLmdvb2Q7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnR29vZCc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS5lYXJ0aDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLndlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnV2Vhayc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS53YXRlcjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLnRyaXZpYWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2VhayA9ICdUcml2aWFsJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSB0eXBlLndpbmQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy5zdHJvbmc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnU3Ryb25nJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSB0eXBlLndpbmQ6XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGVuZW15VHlwZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgdHlwZS5hdG9taWM6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy50cml2aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3ZWFrID0gJ1RyaXZpYWwnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUuZWFydGg6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy5nb29kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3ZWFrID0gJ0dvb2QnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUud2F0ZXI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxpZXIgPSB3ZWFrbmVzcy5nb29kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3ZWFrID0gJ0dvb2QnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIHR5cGUuZmlyZTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IHdlYWtuZXNzLnRyaXZpYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgPSAnVHJpdmlhbCc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFxyXG4gICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAod2VhayAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAke3RoaXMuZ2V0VHlwZSgpfSdzIGF0dGFjayBpcyAke3dlYWt9YCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gbXVsdGlwbGllcjtcclxuICAgIH1cclxuXHJcbiAgICByZXNldEJ1ZmZzKCkgeyAvLyBDaGVja3MgdGhlIHRpbWVyIG9mIGVhY2ggYnVmZiBhbmQgcmVzZXRzIHRoZW0gdG8gMCBpZiB0aGVpciB0aW1lciBpcyB1cC5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYnVmZi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5idWZmVGltZVtpXSA+IDApIHtcclxuICAgICAgICAgICAgICAgIGJ1ZmZUaW1lW2ldIC0tO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYnVmZltpXSA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGFiaWxpdHkocGxheWVyLCBlbmVteSkgeyAvLyBDZXJ0YWluIEVsZW1lbnRhbHMgaGF2ZSBleHRyYSBzdGF0cyBvciBhbHRlcmVkIGF0dGFja3M7IHRoaXMgZW5zdXJlcyB0aGVyZSBhcmUgbm8gZXJyb3JzIHdpdGggLmFiaWxpdHkoKSBpcyBjYWxsZWQgb24gdGhlbS5cclxuICAgIH1cclxuXHJcbiAgICAvLyBGb3IgdGVzdGluZyBwdXJwb3NlczpcclxuXHJcbiAgICBsaXN0U3RhdHMoKSB7IC8vIExpc3RzIGFsbCBzdGF0cy5cclxuICAgICAgICBjb25zb2xlLmxvZyhgXHJcbiAgICAgICAgICAgIE5hbWU6ICR7dGhpcy5uYW1lfVxyXG4gICAgICAgICAgICBUeXBlOiAke3RoaXMuZ2V0VHlwZSgpfVxyXG5cclxuICAgICAgICAgICAgTWF4IEhlYWx0aDogJHt0aGlzLm1heEhlYWx0aH1cclxuICAgICAgICAgICAgQ3VycmVudCBIZWFsdGg6ICR7dGhpcy5oZWFsdGh9XHJcblxyXG4gICAgICAgICAgICBTdHJlbmd0aDogJHt0aGlzLnN0cmVuZ3RofVxyXG4gICAgICAgICAgICBDb25zdGl0dXRpb246ICR7dGhpcy5jb25zdGl0dXRpb259XHJcbiAgICAgICAgICAgIEludGVsaWdlbmNlOiAke3RoaXMuaW50ZWxpZ2VuY2V9XHJcbiAgICAgICAgICAgIEFnaWxpdHk6ICR7dGhpcy5hZ2lsaXR5fVxyXG5cclxuICAgICAgICAgICAgRGFtYWdlOiAke3RoaXMuZGFtYWdlfVxyXG4gICAgICAgICAgICBTcGVlZDogJHt0aGlzLnNwZWVkfVxyXG5cclxuICAgICAgICAgICAgRGVmZW5zZTogJHt0aGlzLmRlZmVuc2V9XHJcbiAgICAgICAgICAgIEFiaWxpdHkgTW9kOiAke3RoaXMuYWJpbGl0eU1vZH1cclxuICAgICAgICBgKTtcclxuICAgIH1cclxuXHJcbiAgICBsb2dIZWFsdGgoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYCR7dGhpcy5nZXRUeXBlKCl9ICR7dGhpcy5uYW1lfSBIZWFsdGg6ICR7dGhpcy5oZWFsdGh9YCk7XHJcbiAgICB9XHJcblxyXG5cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "elemental.js"
      ],
      "names": [
        "Elemental",
        "_buff",
        "_buffTime",
        "i",
        "length",
        "push",
        "_health",
        "_barrier",
        "_baseDamageShield",
        "doubleStrike",
        "Object",
        "keys",
        "type",
        "enemy",
        "initialDmg",
        "calculateDmg",
        "dmg",
        "barrier",
        "console",
        "log",
        "getType",
        "health",
        "damageShield",
        "enemyType",
        "buff",
        "stat",
        "shieldType",
        "Math",
        "round",
        "multiplier",
        "damage",
        "defense",
        "playerType",
        "weak",
        "atomic",
        "earth",
        "weakness",
        "strong",
        "water",
        "fire",
        "wind",
        "trivial",
        "good",
        "buffTime",
        "player",
        "name",
        "maxHealth",
        "strength",
        "constitution",
        "inteligence",
        "agility",
        "speed",
        "abilityMod",
        "_name",
        "_type",
        "_shieldType",
        "TypeError",
        "t",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "h",
        "shield"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import { type, weakness, stat } from '../../src/enum.js';\r\n\r\nexport class Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        \r\n        this._buff = [\r\n            // Main Stats\r\n            0, // Strength\r\n            0, // Constitution\r\n            0, // Inteligence\r\n            0, // Agility\r\n\r\n            // Secondary Stats\r\n            0, // Defense\r\n            0, // Damage Shield\r\n        ];\r\n\r\n\r\n        this._buffTime = []\r\n        for (let i = 0; i < this._buff.length; i++) { // Initiates the timer for every buff at 0.\r\n            this._buffTime.push(0);\r\n        }\r\n\r\n        // Secondary stats\r\n        this._health = 0;\r\n        this._barrier = 0;\r\n        this._baseDamageShield = 0;\r\n\r\n        this.doubleStrike = false;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n    get name() { // Name of Elemental\r\n        return this._name;\r\n    }\r\n\r\n    get type() { // Elementals type\r\n        return this._type;\r\n    }\r\n\r\n    get shieldType() { // Elemental type of damage shield\r\n        return this._shieldType;\r\n    }\r\n\r\n    \r\n    // Arrays\r\n    get buff() {\r\n        return this._buff;\r\n    }\r\n\r\n    get buffTime() {\r\n        return this._buffTime;\r\n    }\r\n\r\n    // stats\r\n    get strength() { // Used in Damage calculations\r\n        return this._baseStrength + this._buff[stat.strength];\r\n    }\r\n\r\n    get constitution() { // Used to calculate Damage and Defense\r\n        return this._baseConstitution + this._buff[stat.constitution];\r\n    }\r\n\r\n    get inteligence() { // Used to calculate Ability Modifier\r\n        return this._baseInteligence + this._buff[stat.inteligence];\r\n    }\r\n\r\n    get agility() { // Used to calculate Speed.\r\n        return this._baseAgility + this._buff[stat.agility];\r\n    }\r\n\r\n    // Calculated stats\r\n\r\n    get damage() {\r\n        return this.strength;\r\n    }\r\n\r\n    get speed() { // Used to see which Elemental goes first.\r\n        return this.agility;\r\n    }\r\n\r\n    get maxHealth() { // Maximum Health for the Elemental\r\n        return this.constitution * 5;\r\n    }\r\n\r\n    get health() { // Current Health of the Elemental\r\n        return this._health;\r\n    }\r\n\r\n    get defense() { // Mitigates Damage.\r\n        return Math.round((this.constitution * 0.25) + this._buff[stat.defense]);\r\n    }\r\n\r\n    get abilityMod() { // Used to modify various Elemental Abilities.\r\n        return this.inteligence * 0.1;\r\n    }\r\n\r\n    get damageShield() { // Causes Damage to attacking Elemental.\r\n        let shield = Math.round(this._baseDamageShield + this._buff[stat.damageShield]);\r\n\r\n        if (shield < 0) {\r\n            return 0;\r\n            \r\n        } else {\r\n            return shield;\r\n        }\r\n    }\r\n\r\n    get barrier() { // Mitigates Damage then is removed based on damage .\r\n        return this._barrier;\r\n    }\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n    *********************/\r\n\r\n    set shieldType(type) {\r\n        if (type === type.atomic || type === type.fire || type === type.water || type === type.earth || type === type.wind) {\r\n            this._shieldType = type;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Type must match type.x in enum.js`);\r\n        }\r\n    }\r\n\r\n    // Arrays\r\n    set buff(stat) {\r\n        this._buff = stat;\r\n    }\r\n\r\n    set buffTime(t) {\r\n        this._buffTime = t;\r\n    }\r\n\r\n    // Main Stats\r\n    set strength(buff) { // Sets the Elementals Strength Buff (Does not affect Base Strength)\r\n        if (typeof buff === 'number') {\r\n            this._buff[stat.strength] = buff;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Strength must be a number`);\r\n        } \r\n    }\r\n\r\n    set constitution(buff) { // Sets the Elementals Constitution Buff (Does not affect Base Constitution)\r\n        if (typeof buff === 'number') {\r\n            this._buff[stat.constitution] = buff;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Strength must be a number`);\r\n        }\r\n    }\r\n\r\n    set inteligence(buff) { // Sets the Elementals Inteligence Buff (Does not affect Base Inteligence)\r\n        if (typeof buff === 'number') {\r\n            this._buff[stat.inteligence] = buff;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Strength must be a number`);\r\n        }\r\n    }\r\n\r\n    set agility(buff) { // Sets the Elementals agility Buff (Does not affect Base Agility)\r\n        if (typeof buff === 'number') {\r\n            this._buff[stat.agility] = buff;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Strength must be a number`);\r\n        }\r\n    }\r\n\r\n    // Secondary Stats\r\n    set health(h) { \r\n        if (typeof h === 'number') {\r\n            if (h > 0) {\r\n                this._health = h;\r\n            } else {\r\n                this._health = 0;\r\n            }\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Health must be a number.`);\r\n        }\r\n     }\r\n\r\n    set defense(buff) { // Sets the Elementals defense Buff (Does not affect Base Defense)\r\n        if (typeof buff === 'number') {\r\n            this._buff[stat.defense] = buff;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Defense must be a number`);\r\n        }\r\n    }\r\n\r\n    set damageShield(buff) { // Sets the Elementals Damage Shield Buff (Does not affect Base Damage Shield)\r\n        this._buff[stat.damageShield] = buff;\r\n    }\r\n\r\n    set barrier(buff) { // Sets Barrier Buff\r\n        if (typeof buff === 'number') {\r\n            this._barrier = buff;\r\n\r\n            if (this.barrier < 0) {\r\n                this.barrier = 0;\r\n            }\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Barrier must be a number`);\r\n        }\r\n    }\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n    *********************/\r\n\r\n    getType() { // Gives string of type \r\n        return Object.keys(type)[this.type];\r\n    }\r\n\r\n    attack(enemy) { // Attack enemy Elemental's health\r\n            let initialDmg = this.calculateDmg(enemy) \r\n            let dmg = initialDmg - enemy.barrier; // Subtracts Enemy Elementals Barrier from Damage.\r\n\r\n            enemy.barrier -= initialDmg; // Subtracts Damage done to Enemy Elementals Barrier.\r\n\r\n            if (dmg < 0) { // Ensures that intended Damage does not Heal.\r\n                dmg = 0;\r\n            }\r\n\r\n\r\n            if (enemy.barrier < 0) { // Ensures that Enemy's Barrier is not a negateive.\r\n                enemy.barrier = 0;\r\n            }\r\n\r\n            console.log(`Attacking ${enemy.getType()} for ${dmg} Damage.`);\r\n            enemy.health -= dmg; // Inflicts Damage onto the Enemy Elemental.\r\n\r\n\r\n            if (enemy.damageShield > 0) {\r\n                let enemyType = enemy.type;\r\n                if (enemy.buff[stat.damageShield] > 0) {\r\n                    enemyType = enemy.shieldType;\r\n                }\r\n\r\n                dmg = Math.round(enemy.damageShield * enemy.multiplier(enemyType, this.type));\r\n                console.log(`Taking ${dmg} Damage from Damage Shield`);\r\n                this.health -= dmg; // Take damage if enemy has a Damage Shield\r\n            }     \r\n    }\r\n\r\n    calculateDmg(enemy) { // Calculates damage.\r\n        let dmg = Math.round((this.damage * this.multiplier(this.type, enemy.type)) - enemy.defense);\r\n\r\n        if (dmg < 0) {\r\n            dmg = 0;\r\n        }\r\n\r\n        return dmg;\r\n    }\r\n\r\n    multiplier(playerType, enemyType) { // Decides multiplier based on weakness\r\n        let multiplier = 1;\r\n        let weak;\r\n        \r\n        switch (playerType) {\r\n            case type.atomic:\r\n                switch (enemyType) {\r\n                    case type.earth:\r\n                        multiplier = weakness.strong;\r\n                        weak = 'Strong';\r\n                        break;\r\n                    case type.water:\r\n                        multiplier = weakness.weak;\r\n                        weak = 'Weak';\r\n                        break;\r\n                    case type.fire:\r\n                        multiplier = weakness.weak;\r\n                        weak = 'Weak';\r\n                        break;\r\n                    case type.wind:\r\n                        multiplier = weakness.strong;\r\n                        weak = 'Strong';\r\n                        break;\r\n                }\r\n                break;\r\n            case type.earth:\r\n                switch (enemyType) {\r\n                    case type.atomic:\r\n                        multiplier = weakness.trivial;\r\n                        weak = 'Trivial';\r\n                        break;\r\n                    case type.water:\r\n                        multiplier = weakness.strong;\r\n                        weak = 'Strong';\r\n                        break;\r\n                    case type.fire:\r\n                        multiplier = weakness.good;\r\n                        break;\r\n                    case type.wind:\r\n                        multiplier = weakness.weak;\r\n                        weak = 'Weak';\r\n                        break;\r\n                }\r\n                break;\r\n            case type.water:\r\n                switch (enemyType) {\r\n                    case type.atomic:\r\n                    multiplier = weakness.good;\r\n                    weak = 'Good';\r\n                    break;\r\n                case type.earth:\r\n                    multiplier = weakness.trivial;\r\n                    weak = 'Trivial';\r\n                    break;\r\n                case type.fire:\r\n                    multiplier = weakness.strong;\r\n                    weak = 'Strong';\r\n                    break;\r\n                case type.wind:\r\n                    multiplier = weakness.weak;\r\n                    weak = 'Weak';\r\n                    break;\r\n                }\r\n                break;\r\n            case type.fire:\r\n                switch (enemyType) {\r\n                    case type.atomic:\r\n                        multiplier = weakness.good;\r\n                        weak = 'Good';\r\n                        break;\r\n                    case type.earth:\r\n                        multiplier = weakness.weak;\r\n                        weak = 'Weak';\r\n                        break;\r\n                    case type.water:\r\n                        multiplier = weakness.trivial\r\n                        weak = 'Trivial';\r\n                        break;\r\n                    case type.wind:\r\n                        multiplier = weakness.strong;\r\n                        weak = 'Strong';\r\n                        break;\r\n                }\r\n                break;\r\n            case type.wind:\r\n                switch (enemyType) {\r\n                    case type.atomic:\r\n                        multiplier = weakness.trivial;\r\n                        weak = 'Trivial';\r\n                        break;\r\n                    case type.earth:\r\n                        multiplier = weakness.good;\r\n                        weak = 'Good';\r\n                        break;\r\n                    case type.water:\r\n                        multiplier = weakness.good;\r\n                        weak = 'Good';\r\n                        break;\r\n                    case type.fire:\r\n                        multiplier = weakness.trivial;\r\n                        weak = 'Trivial';\r\n                        break;\r\n                }\r\n                break;\r\n            default: \r\n                multiplier = 1;\r\n        }\r\n\r\n        if (weak != null) {\r\n            console.log(`${this.getType()}'s attack is ${weak}`);\r\n        }\r\n\r\n        return multiplier;\r\n    }\r\n\r\n    resetBuffs() { // Checks the timer of each buff and resets them to 0 if their timer is up.\r\n        for (let i = 0; i < this.buff.length; i++) {\r\n            if (this.buffTime[i] > 0) {\r\n                buffTime[i] --;\r\n            } else {\r\n                buff[i] = 0;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    ability(player, enemy) { // Certain Elementals have extra stats or altered attacks; this ensures there are no errors with .ability() is called on them.\r\n    }\r\n\r\n    // For testing purposes:\r\n\r\n    listStats() { // Lists all stats.\r\n        console.log(`\r\n            Name: ${this.name}\r\n            Type: ${this.getType()}\r\n\r\n            Max Health: ${this.maxHealth}\r\n            Current Health: ${this.health}\r\n\r\n            Strength: ${this.strength}\r\n            Constitution: ${this.constitution}\r\n            Inteligence: ${this.inteligence}\r\n            Agility: ${this.agility}\r\n\r\n            Damage: ${this.damage}\r\n            Speed: ${this.speed}\r\n\r\n            Defense: ${this.defense}\r\n            Ability Mod: ${this.abilityMod}\r\n        `);\r\n    }\r\n\r\n    logHealth() {\r\n        console.log(`${this.getType()} ${this.name} Health: ${this.health}`);\r\n    }\r\n\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562344645729
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\\\\atomicA1.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA1.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA1.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
        "sourceFileName": "atomicA1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AtomicA1 = void 0;\n\nvar _atomic = require(\"./atomic.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar AtomicA1 =\n/*#__PURE__*/\nfunction (_Atomic) {\n  _inherits(AtomicA1, _Atomic);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicA1() {\n    var _this;\n\n    _classCallCheck(this, AtomicA1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AtomicA1).call(this));\n    _this._baseStrength = 6;\n    _this._baseConstitution = 6;\n    _this._baseInteligence = 9;\n    _this._baseAgility = 6;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return AtomicA1;\n}(_atomic.Atomic);\n\nexports.AtomicA1 = AtomicA1;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pY0ExLmpzIl0sIm5hbWVzIjpbIkF0b21pY0ExIiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsIkF0b21pYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLFE7Ozs7O0FBQ1o7OztBQUlBLHNCQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFFQSxVQUFLQyxhQUFMLEdBQXFCLENBQXJCO0FBQ0EsVUFBS0MsaUJBQUwsR0FBeUIsQ0FBekI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBLFVBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFOYTtBQU9iO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF0QjZCQyxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGF0b21pYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF0b21pYyB9IGZyb20gJy4vYXRvbWljLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdG9taWNBMSBleHRlbmRzIEF0b21pYyB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSA2O1xyXG5cdFx0dGhpcy5fYmFzZUNvbnN0aXR1dGlvbiA9IDY7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSA5O1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSA2O1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "atomicA1.js"
      ],
      "names": [
        "AtomicA1",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "Atomic"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACZ;;;AAIA,sBAAc;AAAA;;AAAA;;AACb;AAEA,UAAKC,aAAL,GAAqB,CAArB;AACA,UAAKC,iBAAL,GAAyB,CAAzB;AACA,UAAKC,gBAAL,GAAwB,CAAxB;AACA,UAAKC,YAAL,GAAoB,CAApB;AANa;AAOb;AAED;;;;AAIA;;;;AAIA;;;;;;EAtB6BC,c",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "sourcesContent": [
        "import { Atomic } from './atomic.js';\r\n\r\nexport class AtomicA1 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._baseStrength = 6;\r\n\t\tthis._baseConstitution = 6;\r\n\t\tthis._baseInteligence = 9;\r\n\t\tthis._baseAgility = 6;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561492702548
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\\\\atomicA2.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA2.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA2.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA2.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
        "sourceFileName": "atomicA2.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AtomicA2 = void 0;\n\nvar _atomic = require(\"./atomic.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar AtomicA2 =\n/*#__PURE__*/\nfunction (_Atomic) {\n  _inherits(AtomicA2, _Atomic);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicA2() {\n    var _this;\n\n    _classCallCheck(this, AtomicA2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AtomicA2).call(this));\n    _this._baseStrength = 13;\n    _this._baseConstitution = 12;\n    _this._baseInteligence = 14;\n    _this._baseAgility = 7;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return AtomicA2;\n}(_atomic.Atomic);\n\nexports.AtomicA2 = AtomicA2;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pY0EyLmpzIl0sIm5hbWVzIjpbIkF0b21pY0EyIiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsIkF0b21pYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLFE7Ozs7O0FBQ1o7OztBQUlBLHNCQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFFQSxVQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsVUFBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFVBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFOYTtBQU9iO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF0QjZCQyxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGF0b21pYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF0b21pYyB9IGZyb20gJy4vYXRvbWljLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdG9taWNBMiBleHRlbmRzIEF0b21pYyB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSAxMztcclxuXHRcdHRoaXMuX2Jhc2VDb25zdGl0dXRpb24gPSAxMjtcclxuXHRcdHRoaXMuX2Jhc2VJbnRlbGlnZW5jZSA9IDE0O1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSA3O1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufVxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "atomicA2.js"
      ],
      "names": [
        "AtomicA2",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "Atomic"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACZ;;;AAIA,sBAAc;AAAA;;AAAA;;AACb;AAEA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,YAAL,GAAoB,CAApB;AANa;AAOb;AAED;;;;AAIA;;;;AAIA;;;;;;EAtB6BC,c",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "sourcesContent": [
        "import { Atomic } from './atomic.js';\r\n\r\nexport class AtomicA2 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._baseStrength = 13;\r\n\t\tthis._baseConstitution = 12;\r\n\t\tthis._baseInteligence = 14;\r\n\t\tthis._baseAgility = 7;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561493623246
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\\\\atomicA3.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA3.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA3.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicA3.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
        "sourceFileName": "atomicA3.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AtomicA3 = void 0;\n\nvar _atomic = require(\"./atomic.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar AtomicA3 =\n/*#__PURE__*/\nfunction (_Atomic) {\n  _inherits(AtomicA3, _Atomic);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicA3() {\n    var _this;\n\n    _classCallCheck(this, AtomicA3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AtomicA3).call(this));\n    _this._baseStrength = 13;\n    _this._baseConstitution = 12;\n    _this._baseInteligence = 14;\n    _this._baseAgility = 7;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return AtomicA3;\n}(_atomic.Atomic);\n\nexports.AtomicA3 = AtomicA3;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pY0EzLmpzIl0sIm5hbWVzIjpbIkF0b21pY0EzIiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsIkF0b21pYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLFE7Ozs7O0FBQ1o7OztBQUlBLHNCQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFDQSxVQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsVUFBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFVBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFMYTtBQU1iO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUFyQjZCQyxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGF0b21pYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF0b21pYyB9IGZyb20gJy4vYXRvbWljLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdG9taWNBMyBleHRlbmRzIEF0b21pYyB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHRcdHRoaXMuX2Jhc2VTdHJlbmd0aCA9IDEzO1xyXG5cdFx0dGhpcy5fYmFzZUNvbnN0aXR1dGlvbiA9IDEyO1xyXG5cdFx0dGhpcy5fYmFzZUludGVsaWdlbmNlID0gMTQ7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDc7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "atomicA3.js"
      ],
      "names": [
        "AtomicA3",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "Atomic"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACZ;;;AAIA,sBAAc;AAAA;;AAAA;;AACb;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,YAAL,GAAoB,CAApB;AALa;AAMb;AAED;;;;AAIA;;;;AAIA;;;;;;EArB6BC,c",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "sourcesContent": [
        "import { Atomic } from './atomic.js';\r\n\r\nexport class AtomicA3 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._baseStrength = 13;\r\n\t\tthis._baseConstitution = 12;\r\n\t\tthis._baseInteligence = 14;\r\n\t\tthis._baseAgility = 7;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561493838219
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\\\\atomicB1.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicB1.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicB1.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicB1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
        "sourceFileName": "atomicB1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AtomicB1 = void 0;\n\nvar _atomic = require(\"./atomic.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar AtomicB1 =\n/*#__PURE__*/\nfunction (_Atomic) {\n  _inherits(AtomicB1, _Atomic);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicB1() {\n    var _this;\n\n    _classCallCheck(this, AtomicB1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AtomicB1).call(this));\n    _this._baseStrength = 13;\n    _this._baseConstitution = 12;\n    _this._baseInteligence = 14;\n    _this._baseAgility = 7;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return AtomicB1;\n}(_atomic.Atomic);\n\nexports.AtomicB1 = AtomicB1;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pY0IxLmpzIl0sIm5hbWVzIjpbIkF0b21pY0IxIiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsIkF0b21pYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLFE7Ozs7O0FBQ1o7OztBQUlBLHNCQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFDQSxVQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsVUFBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFVBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFMYTtBQU1iO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUFyQjZCQyxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGF0b21pYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF0b21pYyB9IGZyb20gJy4vYXRvbWljLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdG9taWNCMSBleHRlbmRzIEF0b21pYyB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHRcdHRoaXMuX2Jhc2VTdHJlbmd0aCA9IDEzO1xyXG5cdFx0dGhpcy5fYmFzZUNvbnN0aXR1dGlvbiA9IDEyO1xyXG5cdFx0dGhpcy5fYmFzZUludGVsaWdlbmNlID0gMTQ7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDc7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "atomicB1.js"
      ],
      "names": [
        "AtomicB1",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "Atomic"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACZ;;;AAIA,sBAAc;AAAA;;AAAA;;AACb;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,YAAL,GAAoB,CAApB;AALa;AAMb;AAED;;;;AAIA;;;;AAIA;;;;;;EArB6BC,c",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "sourcesContent": [
        "import { Atomic } from './atomic.js';\r\n\r\nexport class AtomicB1 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._baseStrength = 13;\r\n\t\tthis._baseConstitution = 12;\r\n\t\tthis._baseInteligence = 14;\r\n\t\tthis._baseAgility = 7;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561495050346
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic\\\\atomicC2.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicC2.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicC2.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic\\atomicC2.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
        "sourceFileName": "atomicC2.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AtomicC2 = void 0;\n\nvar _atomic = require(\"./atomic.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar AtomicC2 =\n/*#__PURE__*/\nfunction (_Atomic) {\n  _inherits(AtomicC2, _Atomic);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicC2() {\n    var _this;\n\n    _classCallCheck(this, AtomicC2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AtomicC2).call(this));\n    _this._baseStrength = 28;\n    _this._baseConstitution = 22;\n    _this._baseInteligence = 24;\n    _this._baseAgility = 7;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return AtomicC2;\n}(_atomic.Atomic);\n\nexports.AtomicC2 = AtomicC2;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pY0MyLmpzIl0sIm5hbWVzIjpbIkF0b21pY0MyIiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsIkF0b21pYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLFE7Ozs7O0FBQ1o7OztBQUlBLHNCQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFDQSxVQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsVUFBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFVBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFMYTtBQU1iO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUFyQjZCQyxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGF0b21pYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF0b21pYyB9IGZyb20gJy4vYXRvbWljLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdG9taWNDMiBleHRlbmRzIEF0b21pYyB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHRcdHRoaXMuX2Jhc2VTdHJlbmd0aCA9IDI4O1xyXG5cdFx0dGhpcy5fYmFzZUNvbnN0aXR1dGlvbiA9IDIyO1xyXG5cdFx0dGhpcy5fYmFzZUludGVsaWdlbmNlID0gMjQ7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDc7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "atomicC2.js"
      ],
      "names": [
        "AtomicC2",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "Atomic"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACZ;;;AAIA,sBAAc;AAAA;;AAAA;;AACb;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,YAAL,GAAoB,CAApB;AALa;AAMb;AAED;;;;AAIA;;;;AAIA;;;;;;EArB6BC,c",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic",
      "sourcesContent": [
        "import { Atomic } from './atomic.js';\r\n\r\nexport class AtomicC2 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._baseStrength = 28;\r\n\t\tthis._baseConstitution = 22;\r\n\t\tthis._baseInteligence = 24;\r\n\t\tthis._baseAgility = 7;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561499245080
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\earth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\earth\\\\earthC4.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth\\earthC4.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth\\earthC4.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth\\earthC4.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth",
        "sourceFileName": "earthC4.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EarthC4 = void 0;\n\nvar _earth = require(\"./earth.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar EarthC4 =\n/*#__PURE__*/\nfunction (_Earth) {\n  _inherits(EarthC4, _Earth);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function EarthC4() {\n    var _this;\n\n    _classCallCheck(this, EarthC4);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EarthC4).call(this));\n    _this._baseStrength = 25;\n    _this._baseConstitution = 33;\n    _this._baseInteligence = 15;\n    _this._baseAgility = 4;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return EarthC4;\n}(_earth.Earth);\n\nexports.EarthC4 = EarthC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVhcnRoQzQuanMiXSwibmFtZXMiOlsiRWFydGhDNCIsIl9iYXNlU3RyZW5ndGgiLCJfYmFzZUNvbnN0aXR1dGlvbiIsIl9iYXNlSW50ZWxpZ2VuY2UiLCJfYmFzZUFnaWxpdHkiLCJFYXJ0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRWFBLE87Ozs7O0FBQ1o7OztBQUlBLHFCQUFjO0FBQUE7O0FBQUE7O0FBQ2I7QUFDQSxVQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsVUFBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFVBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFMYTtBQU1iO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUFyQjRCQyxZIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGVhcnRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFYXJ0aH0gZnJvbSAnLi9lYXJ0aC5qcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRWFydGhDNCBleHRlbmRzIEVhcnRoIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gMjU7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMzM7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSAxNTtcclxuXHRcdHRoaXMuX2Jhc2VBZ2lsaXR5ID0gNDtcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "earthC4.js"
      ],
      "names": [
        "EarthC4",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "Earth"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;IAEaA,O;;;;;AACZ;;;AAIA,qBAAc;AAAA;;AAAA;;AACb;AACA,UAAKC,aAAL,GAAqB,EAArB;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,YAAL,GAAoB,CAApB;AALa;AAMb;AAED;;;;AAIA;;;;AAIA;;;;;;EArB4BC,Y",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth",
      "sourcesContent": [
        "import {Earth} from './earth.js';\r\n\r\nexport class EarthC4 extends Earth {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 33;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 4;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561568776651
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\earth\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\earth\\\\earth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth\\earth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth\\earth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth\\earth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth",
        "sourceFileName": "earth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Earth = void 0;\n\nvar _enum = require(\"../../../src/enum.js\");\n\nvar _elemental = require(\"../elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Earth =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Earth, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Earth() {\n    var _this;\n\n    _classCallCheck(this, Earth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Earth).call(this));\n    _this._type = _enum.type.earth;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Earth;\n}(_elemental.Elemental);\n\nexports.Earth = Earth;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVhcnRoLmpzIl0sIm5hbWVzIjpbIkVhcnRoIiwiX3R5cGUiLCJ0eXBlIiwiZWFydGgiLCJFbGVtZW50YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztJQUVhQSxLOzs7OztBQUNaOzs7QUFJQSxtQkFBYztBQUFBOztBQUFBOztBQUNQO0FBQ0EsVUFBS0MsS0FBTCxHQUFhQyxXQUFLQyxLQUFsQjtBQUZPO0FBR2I7QUFFRDs7OztBQUlBOzs7O0FBSUE7Ozs7OztFQWxCMEJDLG9CIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHNcXGVhcnRoIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt0eXBlfSBmcm9tICcuLi8uLi8uLi9zcmMvZW51bS5qcyc7XHJcbmltcG9ydCB7RWxlbWVudGFsfSBmcm9tICcuLi9lbGVtZW50YWwuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVhcnRoIGV4dGVuZHMgRWxlbWVudGFsIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLl90eXBlID0gdHlwZS5lYXJ0aDtcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "earth.js"
      ],
      "names": [
        "Earth",
        "_type",
        "type",
        "earth",
        "Elemental"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;IAEaA,K;;;;;AACZ;;;AAIA,mBAAc;AAAA;;AAAA;;AACP;AACA,UAAKC,KAAL,GAAaC,WAAKC,KAAlB;AAFO;AAGb;AAED;;;;AAIA;;;;AAIA;;;;;;EAlB0BC,oB",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth",
      "sourcesContent": [
        "import {type} from '../../../src/enum.js';\r\nimport {Elemental} from '../elemental.js';\r\n\r\nexport class Earth extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n        this._type = type.earth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561568605644
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\src\\\\enum.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\src\\enum.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\src\\enum.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\src\\enum.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
        "sourceFileName": "enum.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stat = exports.weakness = exports.type = void 0;\nvar type = {\n  /*********************************************************************\r\n          IMPORTANT: If this is changed in ANY way make sure to\r\n          update the multiplier method in the Elemental Class \r\n          located inside elemental.js as well as the Player Class\r\n          located inside of player.js.\r\n  *********************************************************************/\n  atomic: 0,\n  fire: 1,\n  water: 2,\n  earth: 3,\n  wind: 4\n};\nexports.type = type;\nvar weakness = {\n  strong: 2,\n  good: 1.5,\n  weak: 0.5,\n  trivial: 0.25\n};\nexports.weakness = weakness;\nvar stat = {\n  /*********************************************************************\r\n          IMPORTANT: If this is changed in ANY way make sure to\r\n          update the stat Array inside the the Elemental Class \r\n          constructor located inside elemental.js.\r\n  *********************************************************************/\n  // Main Stats\n  strength: 0,\n  constitution: 1,\n  inteligence: 2,\n  agility: 3,\n  // Secondary Stats\n  defense: 4,\n  damageShield: 5\n};\nexports.stat = stat;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudW0uanMiXSwibmFtZXMiOlsidHlwZSIsImF0b21pYyIsImZpcmUiLCJ3YXRlciIsImVhcnRoIiwid2luZCIsIndlYWtuZXNzIiwic3Ryb25nIiwiZ29vZCIsIndlYWsiLCJ0cml2aWFsIiwic3RhdCIsInN0cmVuZ3RoIiwiY29uc3RpdHV0aW9uIiwiaW50ZWxpZ2VuY2UiLCJhZ2lsaXR5IiwiZGVmZW5zZSIsImRhbWFnZVNoaWVsZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsSUFBSSxHQUFHO0FBQ2hCOzs7Ozs7QUFPQUMsRUFBQUEsTUFBTSxFQUFFLENBUlE7QUFTaEJDLEVBQUFBLElBQUksRUFBRSxDQVRVO0FBVWhCQyxFQUFBQSxLQUFLLEVBQUUsQ0FWUztBQVdoQkMsRUFBQUEsS0FBSyxFQUFFLENBWFM7QUFZaEJDLEVBQUFBLElBQUksRUFBRTtBQVpVLENBQWI7O0FBZUEsSUFBTUMsUUFBUSxHQUFHO0FBQ3BCQyxFQUFBQSxNQUFNLEVBQUUsQ0FEWTtBQUVwQkMsRUFBQUEsSUFBSSxFQUFFLEdBRmM7QUFHcEJDLEVBQUFBLElBQUksRUFBRSxHQUhjO0FBSXBCQyxFQUFBQSxPQUFPLEVBQUU7QUFKVyxDQUFqQjs7QUFPQSxJQUFNQyxJQUFJLEdBQUc7QUFDaEI7Ozs7O0FBTUE7QUFDQUMsRUFBQUEsUUFBUSxFQUFFLENBUk07QUFTaEJDLEVBQUFBLFlBQVksRUFBRSxDQVRFO0FBVWhCQyxFQUFBQSxXQUFXLEVBQUUsQ0FWRztBQVdoQkMsRUFBQUEsT0FBTyxFQUFFLENBWE87QUFhaEI7QUFDQUMsRUFBQUEsT0FBTyxFQUFFLENBZE87QUFlaEJDLEVBQUFBLFlBQVksRUFBRTtBQWZFLENBQWIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkb2dnaVxcZG9jdW1lbnRzXFx0ZW90bFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHR5cGUgPSB7XHJcbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiAgICAgICAgICAgIElNUE9SVEFOVDogSWYgdGhpcyBpcyBjaGFuZ2VkIGluIEFOWSB3YXkgbWFrZSBzdXJlIHRvXHJcbiAgICAgICAgICAgIHVwZGF0ZSB0aGUgbXVsdGlwbGllciBtZXRob2QgaW4gdGhlIEVsZW1lbnRhbCBDbGFzcyBcclxuICAgICAgICAgICAgbG9jYXRlZCBpbnNpZGUgZWxlbWVudGFsLmpzIGFzIHdlbGwgYXMgdGhlIFBsYXllciBDbGFzc1xyXG4gICAgICAgICAgICBsb2NhdGVkIGluc2lkZSBvZiBwbGF5ZXIuanMuXHJcbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG4gICAgYXRvbWljOiAwLFxyXG4gICAgZmlyZTogMSxcclxuICAgIHdhdGVyOiAyLFxyXG4gICAgZWFydGg6IDMsXHJcbiAgICB3aW5kOiA0LFxyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgd2Vha25lc3MgPSB7XHJcbiAgICBzdHJvbmc6IDIsXHJcbiAgICBnb29kOiAxLjUsXHJcbiAgICB3ZWFrOiAwLjUsXHJcbiAgICB0cml2aWFsOiAwLjI1XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBzdGF0ID0ge1xyXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gICAgICAgICAgICBJTVBPUlRBTlQ6IElmIHRoaXMgaXMgY2hhbmdlZCBpbiBBTlkgd2F5IG1ha2Ugc3VyZSB0b1xyXG4gICAgICAgICAgICB1cGRhdGUgdGhlIHN0YXQgQXJyYXkgaW5zaWRlIHRoZSB0aGUgRWxlbWVudGFsIENsYXNzIFxyXG4gICAgICAgICAgICBjb25zdHJ1Y3RvciBsb2NhdGVkIGluc2lkZSBlbGVtZW50YWwuanMuXHJcbiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG4gICAgLy8gTWFpbiBTdGF0c1xyXG4gICAgc3RyZW5ndGg6IDAsXHJcbiAgICBjb25zdGl0dXRpb246IDEsXHJcbiAgICBpbnRlbGlnZW5jZTogMixcclxuICAgIGFnaWxpdHk6IDMsXHJcblxyXG4gICAgLy8gU2Vjb25kYXJ5IFN0YXRzXHJcbiAgICBkZWZlbnNlOiA0LFxyXG4gICAgZGFtYWdlU2hpZWxkOiA1LFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "enum.js"
      ],
      "names": [
        "type",
        "atomic",
        "fire",
        "water",
        "earth",
        "wind",
        "weakness",
        "strong",
        "good",
        "weak",
        "trivial",
        "stat",
        "strength",
        "constitution",
        "inteligence",
        "agility",
        "defense",
        "damageShield"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,IAAI,GAAG;AAChB;;;;;;AAOAC,EAAAA,MAAM,EAAE,CARQ;AAShBC,EAAAA,IAAI,EAAE,CATU;AAUhBC,EAAAA,KAAK,EAAE,CAVS;AAWhBC,EAAAA,KAAK,EAAE,CAXS;AAYhBC,EAAAA,IAAI,EAAE;AAZU,CAAb;;AAeA,IAAMC,QAAQ,GAAG;AACpBC,EAAAA,MAAM,EAAE,CADY;AAEpBC,EAAAA,IAAI,EAAE,GAFc;AAGpBC,EAAAA,IAAI,EAAE,GAHc;AAIpBC,EAAAA,OAAO,EAAE;AAJW,CAAjB;;AAOA,IAAMC,IAAI,GAAG;AAChB;;;;;AAMA;AACAC,EAAAA,QAAQ,EAAE,CARM;AAShBC,EAAAA,YAAY,EAAE,CATE;AAUhBC,EAAAA,WAAW,EAAE,CAVG;AAWhBC,EAAAA,OAAO,EAAE,CAXO;AAahB;AACAC,EAAAA,OAAO,EAAE,CAdO;AAehBC,EAAAA,YAAY,EAAE;AAfE,CAAb",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\src",
      "sourcesContent": [
        "export const type = {\r\n    /*********************************************************************\r\n            IMPORTANT: If this is changed in ANY way make sure to\r\n            update the multiplier method in the Elemental Class \r\n            located inside elemental.js as well as the Player Class\r\n            located inside of player.js.\r\n    *********************************************************************/\r\n\r\n    atomic: 0,\r\n    fire: 1,\r\n    water: 2,\r\n    earth: 3,\r\n    wind: 4,\r\n}\r\n\r\nexport const weakness = {\r\n    strong: 2,\r\n    good: 1.5,\r\n    weak: 0.5,\r\n    trivial: 0.25\r\n}\r\n\r\nexport const stat = {\r\n    /*********************************************************************\r\n            IMPORTANT: If this is changed in ANY way make sure to\r\n            update the stat Array inside the the Elemental Class \r\n            constructor located inside elemental.js.\r\n    *********************************************************************/\r\n\r\n    // Main Stats\r\n    strength: 0,\r\n    constitution: 1,\r\n    inteligence: 2,\r\n    agility: 3,\r\n\r\n    // Secondary Stats\r\n    defense: 4,\r\n    damageShield: 5,\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562196730296
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\atomic.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\atomic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "atomic.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AtomicC4 = exports.AtomicC3 = exports.AtomicC2 = exports.AtomicC1 = exports.Atomic = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Atomic =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Atomic, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Atomic() {\n    var _this;\n\n    _classCallCheck(this, Atomic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Atomic).call(this));\n    _this._type = _enum.type.atomic;\n    _this._shieldType = _this.type;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Atomic;\n}(_elemental.Elemental);\n\nexports.Atomic = Atomic;\n\nvar AtomicC1 =\n/*#__PURE__*/\nfunction (_Atomic) {\n  _inherits(AtomicC1, _Atomic);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicC1() {\n    var _this2;\n\n    _classCallCheck(this, AtomicC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AtomicC1).call(this));\n    _this2._name = \"C1\"; // Main Stats\n\n    _this2._baseStrength = 33;\n    _this2._baseConstitution = 22;\n    _this2._baseInteligence = 38;\n    _this2._baseAgility = 11; // Secondary Stats\n\n    _this2.health = _this2.maxHealth;\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return AtomicC1;\n}(Atomic);\n\nexports.AtomicC1 = AtomicC1;\n\nvar AtomicC2 =\n/*#__PURE__*/\nfunction (_Atomic2) {\n  _inherits(AtomicC2, _Atomic2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicC2() {\n    var _this3;\n\n    _classCallCheck(this, AtomicC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(AtomicC2).call(this));\n    _this3._name = \"C2\"; // Main Stats\n\n    _this3._baseStrength = 28;\n    _this3._baseConstitution = 22;\n    _this3._baseInteligence = 24;\n    _this3._baseAgility = 11; // Secondary Stats\n\n    _this3.health = _this3.maxHealth;\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(AtomicC2, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Hydrogen Blast\n      // Does dmg ammount of Damage to each enemy Elemental.\n      var dmg = Math.round(this.strength * .25 * this.abilityMod);\n      console.log(\"Inflicting \".concat(dmg, \" to all enemy Elementals\"));\n\n      for (var i = 0; i < enemy.elemental.length; i++) {\n        enemy.elemental[i].health -= dmg;\n      }\n    }\n  }]);\n\n  return AtomicC2;\n}(Atomic);\n\nexports.AtomicC2 = AtomicC2;\n\nvar AtomicC3 =\n/*#__PURE__*/\nfunction (_Atomic3) {\n  _inherits(AtomicC3, _Atomic3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicC3() {\n    var _this4;\n\n    _classCallCheck(this, AtomicC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(AtomicC3).call(this));\n    _this4._name = \"C3\"; // Main Stats\n\n    _this4._baseStrength = 23;\n    _this4._baseConstitution = 27;\n    _this4._baseInteligence = 14;\n    _this4._baseAgility = 21; // Secondary Stats\n\n    _this4.health = _this4.maxHealth;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(AtomicC3, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Radiation Shield\n      // Increases the Damage Shield of every friendly elemental.\n      var buff = Math.round(this.strength * 0.5 * this.abilityMod);\n      console.log(\"Buffing ally Damage Shield by \".concat(buff));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].damageShield = buff;\n        player.elemental[i]._shieldType = this.type;\n        player.elemental[i].buffTime[_enum.stat.damageShield] = 1;\n      }\n    }\n  }]);\n\n  return AtomicC3;\n}(Atomic);\n\nexports.AtomicC3 = AtomicC3;\n\nvar AtomicC4 =\n/*#__PURE__*/\nfunction (_Atomic4) {\n  _inherits(AtomicC4, _Atomic4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function AtomicC4() {\n    var _this5;\n\n    _classCallCheck(this, AtomicC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(AtomicC4).call(this));\n    _this5._name = \"C4\"; // Main Stats\n\n    _this5._baseStrength = 23;\n    _this5._baseConstitution = 32;\n    _this5._baseInteligence = 14;\n    _this5._baseAgility = 16; // Secondary Stats\n\n    _this5.health = _this5.maxHealth;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(AtomicC4, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Radiation (Defense)\n      // Lowers the Defense of every Enemy Elemental.\n      var deBuff = Math.round(this.strength * 0.1 * this.abilityMod);\n      console.log(\"Debuffing all enemy Elementals Defense by \".concat(deBuff, \".\"));\n\n      for (var i = 0; i < enemy.elemental.length; i++) {\n        enemy.elemental[i].defense = -deBuff;\n        player.elemental[i].buffTime[_enum.stat.defense] = 1;\n      }\n    }\n  }]);\n\n  return AtomicC4;\n}(Atomic);\n\nexports.AtomicC4 = AtomicC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "atomic.js"
      ],
      "names": [
        "Atomic",
        "_type",
        "type",
        "atomic",
        "_shieldType",
        "Elemental",
        "AtomicC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "health",
        "maxHealth",
        "AtomicC2",
        "player",
        "enemy",
        "dmg",
        "Math",
        "round",
        "strength",
        "abilityMod",
        "console",
        "log",
        "i",
        "elemental",
        "length",
        "AtomicC3",
        "buff",
        "damageShield",
        "buffTime",
        "stat",
        "AtomicC4",
        "deBuff",
        "defense"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type, stat} from '../../src/enum.js';\r\nimport { Elemental } from './elemental.js';\r\n\r\nexport class Atomic extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._type = type.atomic;\r\n\t\tthis._shieldType = this.type;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class AtomicC1 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 33;\r\n\t\tthis._baseConstitution = 22;\r\n\t\tthis._baseInteligence = 38;\r\n\t\tthis._baseAgility = 11;\t\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\t\r\n}\r\n\r\nexport class AtomicC2 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 28;\r\n\t\tthis._baseConstitution = 22;\r\n\t\tthis._baseInteligence = 24;\r\n\t\tthis._baseAgility = 11;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Hydrogen Blast\r\n\t\t// Does dmg ammount of Damage to each enemy Elemental.\r\n\t\tlet dmg = Math.round((this.strength * .25) * this.abilityMod);\r\n\r\n\t\tconsole.log(`Inflicting ${dmg} to all enemy Elementals`);\r\n\t\tfor (let i = 0; i < enemy.elemental.length; i++) {\r\n\t\t\tenemy.elemental[i].health -= dmg;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class AtomicC3 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis._name = \"C3\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 23;\r\n\t\tthis._baseConstitution = 27;\r\n\t\tthis._baseInteligence = 14;\r\n\t\tthis._baseAgility = 21;\t\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Radiation Shield\r\n\t\t// Increases the Damage Shield of every friendly elemental.\r\n\t\tlet buff = Math.round((this.strength * 0.5) * this.abilityMod);\r\n\t\tconsole.log(`Buffing ally Damage Shield by ${buff}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].damageShield = buff;\r\n\t\t\tplayer.elemental[i]._shieldType = this.type;\r\n\t\t\tplayer.elemental[i].buffTime[stat.damageShield] = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport class AtomicC4 extends Atomic {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis._name = \"C4\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 23;\r\n\t\tthis._baseConstitution = 32;\r\n\t\tthis._baseInteligence = 14;\r\n\t\tthis._baseAgility = 16;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Radiation (Defense)\r\n\t\t// Lowers the Defense of every Enemy Elemental.\r\n\t\tlet deBuff = Math.round((this.strength * 0.1) * this.abilityMod);\r\n\r\n\t\tconsole.log(`Debuffing all enemy Elementals Defense by ${deBuff}.`);\r\n\t\tfor (let i = 0; i < enemy.elemental.length; i++) {\r\n\t\t\tenemy.elemental[i].defense = -deBuff;\r\n\t\t\tplayer.elemental[i].buffTime[stat.defense] = 1;\r\n\t\t}\r\n\t}\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346082846
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\earth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\earth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "earth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EarthC4 = exports.EarthC3 = exports.EarthC2 = exports.EarthC1 = exports.Earth = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Earth =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Earth, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Earth() {\n    var _this;\n\n    _classCallCheck(this, Earth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Earth).call(this));\n    _this._type = _enum.type.earth;\n    _this._shieldType = _this.type;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Earth;\n}(_elemental.Elemental);\n\nexports.Earth = Earth;\n\nvar EarthC1 =\n/*#__PURE__*/\nfunction (_Earth) {\n  _inherits(EarthC1, _Earth);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function EarthC1() {\n    var _this2;\n\n    _classCallCheck(this, EarthC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EarthC1).call(this));\n    _this2._name = \"C1\"; // Main Stats\n\n    _this2._baseStrength = 30;\n    _this2._baseConstitution = 26;\n    _this2._baseInteligence = 7;\n    _this2._baseAgility = 2; // Secondary Stats\n\n    _this2.health = _this2.maxHealth;\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return EarthC1;\n}(Earth);\n\nexports.EarthC1 = EarthC1;\n\nvar EarthC2 =\n/*#__PURE__*/\nfunction (_Earth2) {\n  _inherits(EarthC2, _Earth2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function EarthC2() {\n    var _this3;\n\n    _classCallCheck(this, EarthC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(EarthC2).call(this));\n    _this3._name = \"C2\"; // Main Stats\n\n    _this3._baseStrength = 25;\n    _this3._baseConstitution = 41;\n    _this3._baseInteligence = 5;\n    _this3._baseAgility = 2; // Secondary Stats\n\n    _this3.health = _this3.maxHealth;\n    _this3._baseDamageShield = _this3._baseConstitution * _this3.abilityMod; // Has Damage Shield instead of ability\n\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return EarthC2;\n}(Earth);\n\nexports.EarthC2 = EarthC2;\n\nvar EarthC3 =\n/*#__PURE__*/\nfunction (_Earth3) {\n  _inherits(EarthC3, _Earth3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function EarthC3() {\n    var _this4;\n\n    _classCallCheck(this, EarthC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(EarthC3).call(this));\n    _this4._name = \"C3\"; // Main Stats\n\n    _this4._baseStrength = 25;\n    _this4._baseConstitution = 33;\n    _this4._baseInteligence = 10;\n    _this4._baseAgility = 9; // Secondary Stats\n\n    _this4.health = _this4.maxHealth;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(EarthC3, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Thorns\n      // Increases the Damage Shield of every friendly elemental.\n      var buff = Math.round(this.strength * 0.5 * this.abilityMod);\n      console.log(\"Buffing ally Damage Shield by \".concat(buff));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].damageShield = buff;\n        player.elemental[i]._shieldType = this.type;\n        player.elemental[i].buffTime[_enum.stat.damageShield] = 1;\n      }\n    }\n  }]);\n\n  return EarthC3;\n}(Earth);\n\nexports.EarthC3 = EarthC3;\n\nvar EarthC4 =\n/*#__PURE__*/\nfunction (_Earth4) {\n  _inherits(EarthC4, _Earth4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function EarthC4() {\n    var _this5;\n\n    _classCallCheck(this, EarthC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(EarthC4).call(this));\n    _this5._name = \"C4\"; // Main Stats\n\n    _this5._baseStrength = 25;\n    _this5._baseConstitution = 33;\n    _this5._baseInteligence = 15;\n    _this5._baseAgility = 4; // Secondary Stats\n\n    _this5.health = _this5.maxHealth;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(EarthC4, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      var buff = Math.round(this.constitution * 0.2 * this.abilityMod);\n      console.log(\"\".concat(this.getType(), \" buffing all of it's allies Defense by \").concat(buff, \".\"));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].defense = buff;\n        player.elemental[i].buffTime[_enum.stat.defense] = 1;\n      }\n    }\n  }]);\n\n  return EarthC4;\n}(Earth);\n\nexports.EarthC4 = EarthC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "earth.js"
      ],
      "names": [
        "Earth",
        "_type",
        "type",
        "earth",
        "_shieldType",
        "Elemental",
        "EarthC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "health",
        "maxHealth",
        "EarthC2",
        "_baseDamageShield",
        "abilityMod",
        "EarthC3",
        "player",
        "enemy",
        "buff",
        "Math",
        "round",
        "strength",
        "console",
        "log",
        "i",
        "elemental",
        "length",
        "damageShield",
        "buffTime",
        "stat",
        "EarthC4",
        "constitution",
        "getType",
        "defense"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type, stat} from '../../src/enum.js';\r\nimport {Elemental} from './elemental.js';\r\n\r\nexport class Earth extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n\t\tthis._type = type.earth;\r\n\t\tthis._shieldType = this.type;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class EarthC1 extends Earth {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 30;\r\n\t\tthis._baseConstitution = 26;\r\n\t\tthis._baseInteligence = 7;\r\n\t\tthis._baseAgility = 2;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class EarthC2 extends Earth {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 41;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 2;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t\tthis._baseDamageShield = this._baseConstitution * this.abilityMod;\t// Has Damage Shield instead of ability\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\t\r\n}\r\n\r\nexport class EarthC3 extends Earth {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C3\";\t\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 33;\r\n\t\tthis._baseInteligence = 10;\r\n\t\tthis._baseAgility = 9;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\t\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Thorns\r\n\t\t// Increases the Damage Shield of every friendly elemental.\r\n\t\tlet buff = Math.round((this.strength * 0.5) * this.abilityMod);\r\n\t\tconsole.log(`Buffing ally Damage Shield by ${buff}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].damageShield = buff;\r\n\t\t\tplayer.elemental[i]._shieldType = this.type;\r\n\t\t\tplayer.elemental[i].buffTime[stat.damageShield] = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class EarthC4 extends Earth {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C4\";\t\t\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 33;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 4;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) {\r\n\t\tlet buff = Math.round((this.constitution * 0.2) * this.abilityMod);\t\r\n\t\t\r\n\t\tconsole.log(`${this.getType()} buffing all of it's allies Defense by ${buff}.`)\r\n\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].defense = buff;\r\n\t\t\tplayer.elemental[i].buffTime[stat.defense] = 1;\r\n\t\t}\r\n\t}\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562345319064
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\Fire.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Fire.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Fire.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Fire.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "Fire.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FireC4 = exports.FireC3 = exports.FireC2 = exports.FireC1 = exports.Fire = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Fire =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Fire, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Fire() {\n    var _this;\n\n    _classCallCheck(this, Fire);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Fire).call(this));\n    _this._type = _enum.type.fire;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Fire;\n}(_elemental.Elemental);\n\nexports.Fire = Fire;\n\nvar FireC1 =\n/*#__PURE__*/\nfunction (_Fire) {\n  _inherits(FireC1, _Fire);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC1() {\n    var _this2;\n\n    _classCallCheck(this, FireC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(FireC1).call(this));\n    _this2._name = \"C1\";\n    _this2._baseStrength = 45;\n    _this2._baseConstitution = 18;\n    _this2._baseInteligence = 5;\n    _this2._baseAgility = 12;\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return FireC1;\n}(Fire);\n\nexports.FireC1 = FireC1;\n\nvar FireC2 =\n/*#__PURE__*/\nfunction (_Fire2) {\n  _inherits(FireC2, _Fire2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC2() {\n    var _this3;\n\n    _classCallCheck(this, FireC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(FireC2).call(this));\n    _this3._name = \"C2\";\n    _this3._baseStrength = 40;\n    _this3._baseConstitution = 18;\n    _this3._baseInteligence = 5;\n    _this3._baseAgility = 17;\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return FireC2;\n}(Fire);\n\nexports.FireC2 = FireC2;\n\nvar FireC3 =\n/*#__PURE__*/\nfunction (_Fire3) {\n  _inherits(FireC3, _Fire3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC3() {\n    var _this4;\n\n    _classCallCheck(this, FireC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(FireC3).call(this));\n    _this4._name = \"C3\";\n    _this4._baseStrength = 32;\n    _this4._baseConstitution = 28;\n    _this4._baseInteligence = 10;\n    _this4._baseAgility = 10;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return FireC3;\n}(Fire);\n\nexports.FireC3 = FireC3;\n\nvar FireC4 =\n/*#__PURE__*/\nfunction (_Fire4) {\n  _inherits(FireC4, _Fire4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC4() {\n    var _this5;\n\n    _classCallCheck(this, FireC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(FireC4).call(this));\n    _this5._baseStrength = 32;\n    _this5._baseConstitution = 23;\n    _this5._baseInteligence = 15;\n    _this5._baseAgility = 10;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return FireC4;\n}(Fire);\n\nexports.FireC4 = FireC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpcmUuanMiXSwibmFtZXMiOlsiRmlyZSIsIl90eXBlIiwidHlwZSIsImZpcmUiLCJFbGVtZW50YWwiLCJGaXJlQzEiLCJfbmFtZSIsIl9iYXNlU3RyZW5ndGgiLCJfYmFzZUNvbnN0aXR1dGlvbiIsIl9iYXNlSW50ZWxpZ2VuY2UiLCJfYmFzZUFnaWxpdHkiLCJGaXJlQzIiLCJGaXJlQzMiLCJGaXJlQzQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztJQUVhQSxJOzs7OztBQUNaOzs7QUFJQSxrQkFBYztBQUFBOztBQUFBOztBQUNQO0FBQ0EsVUFBS0MsS0FBTCxHQUFhQyxXQUFLQyxJQUFsQjtBQUZPO0FBR2I7QUFFRDs7OztBQUlBOzs7O0FBSUE7Ozs7OztFQWxCeUJDLG9COzs7O0lBdUJiQyxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBRUEsV0FBS0MsS0FBTCxHQUFhLElBQWI7QUFFQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJOzs7O0lBNkJmVyxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBRUEsV0FBS0wsS0FBTCxHQUFhLElBQWI7QUFFQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJOzs7O0lBNkJmWSxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBRUEsV0FBS04sS0FBTCxHQUFhLElBQWI7QUFFQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJOzs7O0lBNkJmYSxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBQ0EsV0FBS04sYUFBTCxHQUFxQixFQUFyQjtBQUNBLFdBQUtDLGlCQUFMLEdBQXlCLEVBQXpCO0FBQ0EsV0FBS0MsZ0JBQUwsR0FBd0IsRUFBeEI7QUFDQSxXQUFLQyxZQUFMLEdBQW9CLEVBQXBCO0FBTGE7QUFNYjtBQUVEOzs7O0FBSUE7Ozs7QUFJQTs7Ozs7O0VBckIyQlYsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRvZ2dpXFxkb2N1bWVudHNcXHRlb3RsXFxvYmplY3RzXFxlbGVtZW50YWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt0eXBlfSBmcm9tICcuLi8uLi9zcmMvZW51bS5qcyc7XHJcbmltcG9ydCB7RWxlbWVudGFsfSBmcm9tICcuL2VsZW1lbnRhbC5qcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZSBleHRlbmRzIEVsZW1lbnRhbCB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5fdHlwZSA9IHR5cGUuZmlyZTtcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlQzEgZXh0ZW5kcyBGaXJlIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cclxuXHRcdHRoaXMuX25hbWUgPSBcIkMxXCI7XHJcblxyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gNDU7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMTg7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSA1O1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSAxMjtcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlQzIgZXh0ZW5kcyBGaXJlIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cclxuXHRcdHRoaXMuX25hbWUgPSBcIkMyXCI7XHJcblxyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gNDA7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMTg7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSA1O1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSAxNztcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlQzMgZXh0ZW5kcyBGaXJlIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cclxuXHRcdHRoaXMuX25hbWUgPSBcIkMzXCI7XHJcblxyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gMzI7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMjg7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSAxMDtcclxuXHRcdHRoaXMuX2Jhc2VBZ2lsaXR5ID0gMTA7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZUM0IGV4dGVuZHMgRmlyZSB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHRcdHRoaXMuX2Jhc2VTdHJlbmd0aCA9IDMyO1xyXG5cdFx0dGhpcy5fYmFzZUNvbnN0aXR1dGlvbiA9IDIzO1xyXG5cdFx0dGhpcy5fYmFzZUludGVsaWdlbmNlID0gMTU7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDEwO1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Fire.js"
      ],
      "names": [
        "Fire",
        "_type",
        "type",
        "fire",
        "Elemental",
        "FireC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "FireC2",
        "FireC3",
        "FireC4"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;IAEaA,I;;;;;AACZ;;;AAIA,kBAAc;AAAA;;AAAA;;AACP;AACA,UAAKC,KAAL,GAAaC,WAAKC,IAAlB;AAFO;AAGb;AAED;;;;AAIA;;;;AAIA;;;;;;EAlByBC,oB;;;;IAuBbC,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,WAAKC,KAAL,GAAa,IAAb;AAEA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,CAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I;;;;IA6BfW,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,WAAKL,KAAL,GAAa,IAAb;AAEA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,CAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I;;;;IA6BfY,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,WAAKN,KAAL,GAAa,IAAb;AAEA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,EAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I;;;;IA6Bfa,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AACA,WAAKN,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,EAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AALa;AAMb;AAED;;;;AAIA;;;;AAIA;;;;;;EArB2BV,I",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type} from '../../src/enum.js';\r\nimport {Elemental} from './elemental.js';\r\n\r\nexport class Fire extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n        this._type = type.fire;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class FireC1 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\tthis._baseStrength = 45;\r\n\t\tthis._baseConstitution = 18;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 12;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class FireC2 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\tthis._baseStrength = 40;\r\n\t\tthis._baseConstitution = 18;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 17;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class FireC3 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._name = \"C3\";\r\n\r\n\t\tthis._baseStrength = 32;\r\n\t\tthis._baseConstitution = 28;\r\n\t\tthis._baseInteligence = 10;\r\n\t\tthis._baseAgility = 10;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class FireC4 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._baseStrength = 32;\r\n\t\tthis._baseConstitution = 23;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 10;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561570416236
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\Wind.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Wind.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Wind.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Wind.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "Wind.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindC4 = exports.WindC3 = exports.WindC2 = exports.WindC1 = exports.Wind = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Wind =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Wind, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Wind() {\n    var _this;\n\n    _classCallCheck(this, Wind);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wind).call(this));\n    _this._type = _enum.type.wind;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Wind;\n}(_elemental.Elemental);\n\nexports.Wind = Wind;\n\nvar WindC1 =\n/*#__PURE__*/\nfunction (_Wind) {\n  _inherits(WindC1, _Wind);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC1() {\n    var _this2;\n\n    _classCallCheck(this, WindC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WindC1).call(this));\n    _this2._name = \"C1\";\n    _this2._baseStrength = 35;\n    _this2._baseConstitution = 20;\n    _this2._baseInteligence = 5;\n    _this2._baseAgility = 20;\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return WindC1;\n}(Wind);\n\nexports.WindC1 = WindC1;\n\nvar WindC2 =\n/*#__PURE__*/\nfunction (_Wind2) {\n  _inherits(WindC2, _Wind2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC2() {\n    var _this3;\n\n    _classCallCheck(this, WindC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(WindC2).call(this));\n    _this3._name = \"C2\";\n    _this3._baseStrength = 30;\n    _this3._baseConstitution = 20;\n    _this3._baseInteligence = 5;\n    _this3._baseAgility = 25;\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return WindC2;\n}(Wind);\n\nexports.WindC2 = WindC2;\n\nvar WindC3 =\n/*#__PURE__*/\nfunction (_Wind3) {\n  _inherits(WindC3, _Wind3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC3() {\n    var _this4;\n\n    _classCallCheck(this, WindC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(WindC3).call(this));\n    _this4._name = \"C3\";\n    _this4._baseStrength = 25;\n    _this4._baseConstitution = 27;\n    _this4._baseInteligence = 10;\n    _this4._baseAgility = 18;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return WindC3;\n}(Wind);\n\nexports.WindC3 = WindC3;\n\nvar WindC4 =\n/*#__PURE__*/\nfunction (_Wind4) {\n  _inherits(WindC4, _Wind4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC4() {\n    var _this5;\n\n    _classCallCheck(this, WindC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(WindC4).call(this));\n    _this5._name = \"C4\";\n    _this5._baseStrength = 25;\n    _this5._baseConstitution = 22;\n    _this5._baseInteligence = 15;\n    _this5._baseAgility = 18;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return WindC4;\n}(Wind);\n\nexports.WindC4 = WindC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldpbmQuanMiXSwibmFtZXMiOlsiV2luZCIsIl90eXBlIiwidHlwZSIsIndpbmQiLCJFbGVtZW50YWwiLCJXaW5kQzEiLCJfbmFtZSIsIl9iYXNlU3RyZW5ndGgiLCJfYmFzZUNvbnN0aXR1dGlvbiIsIl9iYXNlSW50ZWxpZ2VuY2UiLCJfYmFzZUFnaWxpdHkiLCJXaW5kQzIiLCJXaW5kQzMiLCJXaW5kQzQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztJQUVhQSxJOzs7OztBQUNaOzs7QUFJQSxrQkFBYztBQUFBOztBQUFBOztBQUNQO0FBQ0EsVUFBS0MsS0FBTCxHQUFhQyxXQUFLQyxJQUFsQjtBQUZPO0FBR2I7QUFFRDs7OztBQUlBOzs7O0FBSUE7Ozs7OztFQWxCeUJDLG9COzs7O0lBdUJiQyxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBRUEsV0FBS0MsS0FBTCxHQUFhLElBQWI7QUFFQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJOzs7O0lBNkJmVyxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBRUEsV0FBS0wsS0FBTCxHQUFhLElBQWI7QUFFQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJOzs7O0lBNkJmWSxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNiO0FBRUEsV0FBS04sS0FBTCxHQUFhLElBQWI7QUFFQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJOzs7O0lBNkJmYSxNOzs7OztBQUNaOzs7QUFJQSxvQkFBYztBQUFBOztBQUFBOztBQUNQO0FBRUEsV0FBS1AsS0FBTCxHQUFhLElBQWI7QUFFTixXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixFQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEI7QUFSYTtBQVNiO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUF4QjJCVixJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9nZ2lcXGRvY3VtZW50c1xcdGVvdGxcXG9iamVjdHNcXGVsZW1lbnRhbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3R5cGV9IGZyb20gJy4uLy4uL3NyYy9lbnVtLmpzJztcclxuaW1wb3J0IHtFbGVtZW50YWx9IGZyb20gJy4vZWxlbWVudGFsLmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBXaW5kIGV4dGVuZHMgRWxlbWVudGFsIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLl90eXBlID0gdHlwZS53aW5kO1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdpbmRDMSBleHRlbmRzIFdpbmQge1xyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqIENvbnN0cnVjdG9yICoqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKCk7XHJcblxyXG5cdFx0dGhpcy5fbmFtZSA9IFwiQzFcIjtcclxuXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSAzNTtcclxuXHRcdHRoaXMuX2Jhc2VDb25zdGl0dXRpb24gPSAyMDtcclxuXHRcdHRoaXMuX2Jhc2VJbnRlbGlnZW5jZSA9IDU7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDIwO1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdpbmRDMiBleHRlbmRzIFdpbmQge1xyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqIENvbnN0cnVjdG9yICoqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKCk7XHJcblxyXG5cdFx0dGhpcy5fbmFtZSA9IFwiQzJcIjtcclxuXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSAzMDtcclxuXHRcdHRoaXMuX2Jhc2VDb25zdGl0dXRpb24gPSAyMDtcclxuXHRcdHRoaXMuX2Jhc2VJbnRlbGlnZW5jZSA9IDU7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDI1O1xyXG5cdH1cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBHZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogU2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIE1ldGhvZHMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdpbmRDMyBleHRlbmRzIFdpbmQge1xyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqIENvbnN0cnVjdG9yICoqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKCk7XHJcblxyXG5cdFx0dGhpcy5fbmFtZSA9IFwiQzNcIjtcclxuXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSAyNTtcclxuXHRcdHRoaXMuX2Jhc2VDb25zdGl0dXRpb24gPSAyNztcclxuXHRcdHRoaXMuX2Jhc2VJbnRlbGlnZW5jZSA9IDEwO1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSAxODtcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBXaW5kQzQgZXh0ZW5kcyBXaW5kIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLl9uYW1lID0gXCJDNFwiO1xyXG4gICAgICAgIFxyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gMjU7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMjI7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSAxNTtcclxuXHRcdHRoaXMuX2Jhc2VBZ2lsaXR5ID0gMTg7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Wind.js"
      ],
      "names": [
        "Wind",
        "_type",
        "type",
        "wind",
        "Elemental",
        "WindC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "WindC2",
        "WindC3",
        "WindC4"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;IAEaA,I;;;;;AACZ;;;AAIA,kBAAc;AAAA;;AAAA;;AACP;AACA,UAAKC,KAAL,GAAaC,WAAKC,IAAlB;AAFO;AAGb;AAED;;;;AAIA;;;;AAIA;;;;;;EAlByBC,oB;;;;IAuBbC,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,WAAKC,KAAL,GAAa,IAAb;AAEA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,CAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I;;;;IA6BfW,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,WAAKL,KAAL,GAAa,IAAb;AAEA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,CAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I;;;;IA6BfY,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACb;AAEA,WAAKN,KAAL,GAAa,IAAb;AAEA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,EAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I;;;;IA6Bfa,M;;;;;AACZ;;;AAIA,oBAAc;AAAA;;AAAA;;AACP;AAEA,WAAKP,KAAL,GAAa,IAAb;AAEN,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACA,WAAKC,gBAAL,GAAwB,EAAxB;AACA,WAAKC,YAAL,GAAoB,EAApB;AARa;AASb;AAED;;;;AAIA;;;;AAIA;;;;;;EAxB2BV,I",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type} from '../../src/enum.js';\r\nimport {Elemental} from './elemental.js';\r\n\r\nexport class Wind extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n        this._type = type.wind;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WindC1 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\tthis._baseStrength = 35;\r\n\t\tthis._baseConstitution = 20;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 20;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WindC2 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\tthis._baseStrength = 30;\r\n\t\tthis._baseConstitution = 20;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 25;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WindC3 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._name = \"C3\";\r\n\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 27;\r\n\t\tthis._baseInteligence = 10;\r\n\t\tthis._baseAgility = 18;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WindC4 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n        \r\n        this._name = \"C4\";\r\n        \r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 22;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 18;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561571038817
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\Water.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Water.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Water.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\Water.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "Water.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaterC4 = exports.WaterC3 = exports.WaterC2 = exports.WaterC1 = exports.Water = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Water =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Water, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Water() {\n    var _this;\n\n    _classCallCheck(this, Water);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Water).call(this));\n    _this._type = _enum.type.water;\n    _this._shieldType = _this.type;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Water;\n}(_elemental.Elemental);\n\nexports.Water = Water;\n\nvar WaterC1 =\n/*#__PURE__*/\nfunction (_Water) {\n  _inherits(WaterC1, _Water);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WaterC1() {\n    var _this2;\n\n    _classCallCheck(this, WaterC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WaterC1).call(this));\n    _this2._name = \"C1\"; // Main Stats\n\n    _this2._baseStrength = 22;\n    _this2._baseConstitution = 35;\n    _this2._baseInteligence = 5;\n    _this2._baseAgility = 8; // Secondary Stats\n\n    _this2.health = _this2.maxHealth;\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WaterC1, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Heal Wounds\n      // Heals every friendly Elemental.\n      var heal = Math.round(this.constitution + this.constitution * this.abilityMod);\n      console.log(\"\".concat(this.getType(), \" Healing all allies for \").concat(heal));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].health += heal; // Ensures Elementals are not healed above their Max Health\n\n        if (player.elemental[i].health > player.elemental[i].maxHealth) {\n          player.elemental[i].health = player.elemental[i].maxHealth;\n        }\n      }\n    }\n  }]);\n\n  return WaterC1;\n}(Water);\n\nexports.WaterC1 = WaterC1;\n\nvar WaterC2 =\n/*#__PURE__*/\nfunction (_Water2) {\n  _inherits(WaterC2, _Water2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WaterC2() {\n    var _this3;\n\n    _classCallCheck(this, WaterC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(WaterC2).call(this));\n    _this3._name = \"C2\"; // Main Stats\n\n    _this3._baseStrength = 20;\n    _this3._baseConstitution = 20;\n    _this3._baseInteligence = 15;\n    _this3._baseAgility = 25; // Secondary Stats\n\n    _this3.health = _this3.maxHealth;\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WaterC2, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Water Barrier\n      // Increases the Damage Shield of every friendly elemental.\n      var buff = Math.round(this.strength * 0.5 * this.abilityMod);\n      console.log(\"Buffing ally Damage Shield by \".concat(buff));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].damageShield = buff;\n        player.elemental[i]._shieldType = this.type;\n        player.elemental[i].buffTime[_enum.stat.damageShield] = 1;\n      }\n    }\n  }]);\n\n  return WaterC2;\n}(Water);\n\nexports.WaterC2 = WaterC2;\n\nvar WaterC3 =\n/*#__PURE__*/\nfunction (_Water3) {\n  _inherits(WaterC3, _Water3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WaterC3() {\n    var _this4;\n\n    _classCallCheck(this, WaterC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(WaterC3).call(this));\n    _this4._name = \"C3\"; // Main Stats\n\n    _this4._baseStrength = 25;\n    _this4._baseConstitution = 27;\n    _this4._baseInteligence = 10;\n    _this4._baseAgility = 18; // Secondary Stats\n\n    _this4.health = _this4.maxHealth;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WaterC3, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Sacred Oath\n      // Heals the player.\n      var heal = Math.round(this.constitution + this.constitution * this.abilityMod);\n      console.log(\"\".concat(this.getType, \" Healing it's Player for \").concat(heal, \".\"));\n      player.health += heal;\n\n      if (player.health > player.maxHealth) {\n        // Ensure the player isn't healed past Max Health.\n        player.health = player.maxHealth;\n      }\n    }\n  }]);\n\n  return WaterC3;\n}(Water);\n\nexports.WaterC3 = WaterC3;\n\nvar WaterC4 =\n/*#__PURE__*/\nfunction (_Water4) {\n  _inherits(WaterC4, _Water4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WaterC4() {\n    var _this5;\n\n    _classCallCheck(this, WaterC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(WaterC4).call(this));\n    _this5._name = \"C4\";\n    _this5._baseStrength = 25;\n    _this5._baseConstitution = 22;\n    _this5._baseInteligence = 15;\n    _this5._baseAgility = 18; // Secondary Stats\n\n    _this5.health = _this5.maxHealth;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WaterC4, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Clarity: Increases the Intelligence of all ally Elementals.\n      var buff = Math.round(this.inteligence * this.abilityMod);\n      console.log(\"\".concat(this.getType(), \" buffing all ally Elementals Inteligence by: \").concat(buff));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].inteligence = buff;\n        player.elemental[i].buffTime[_enum.stat.inteligence] = 1;\n      }\n    }\n  }]);\n\n  return WaterC4;\n}(Water);\n\nexports.WaterC4 = WaterC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Water.js"
      ],
      "names": [
        "Water",
        "_type",
        "type",
        "water",
        "_shieldType",
        "Elemental",
        "WaterC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "health",
        "maxHealth",
        "player",
        "enemy",
        "heal",
        "Math",
        "round",
        "constitution",
        "abilityMod",
        "console",
        "log",
        "getType",
        "i",
        "elemental",
        "length",
        "WaterC2",
        "buff",
        "strength",
        "damageShield",
        "buffTime",
        "stat",
        "WaterC3",
        "WaterC4",
        "inteligence"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type, stat} from '../../src/enum.js';\r\nimport {Elemental} from './elemental.js';\r\n\r\nexport class Water extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n\t\tthis._type = type.water;\r\n\t\tthis._shieldType = this.type;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WaterC1 extends Water {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 22;\r\n\t\tthis._baseConstitution = 35;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 8;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Heal Wounds\r\n\t\t// Heals every friendly Elemental.\r\n\t\tlet heal = Math.round(this.constitution + (this.constitution * this.abilityMod));\r\n\r\n\t\tconsole.log(`${this.getType()} Healing all allies for ${heal}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].health += heal;\r\n\r\n\t\t\t// Ensures Elementals are not healed above their Max Health\r\n\t\t\tif (player.elemental[i].health > player.elemental[i].maxHealth) {\r\n\t\t\t\tplayer.elemental[i].health = player.elemental[i].maxHealth;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class WaterC2 extends Water {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 20;\r\n\t\tthis._baseConstitution = 20;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 25;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Water Barrier\r\n\t\t// Increases the Damage Shield of every friendly elemental.\r\n\t\tlet buff = Math.round((this.strength * 0.5) * this.abilityMod);\r\n\t\tconsole.log(`Buffing ally Damage Shield by ${buff}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].damageShield = buff;\r\n\t\t\tplayer.elemental[i]._shieldType = this.type;\r\n\t\t\tplayer.elemental[i].buffTime[stat.damageShield] = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class WaterC3 extends Water {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C3\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 27;\r\n\t\tthis._baseInteligence = 10;\r\n\t\tthis._baseAgility = 18;\t\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Sacred Oath\r\n\t\t// Heals the player.\r\n\t\tlet heal = Math.round(this.constitution + (this.constitution * this.abilityMod));\r\n\r\n\t\tconsole.log(`${this.getType} Healing it's Player for ${heal}.`);\r\n\r\n\t\tplayer.health += heal;\r\n\r\n\t\tif (player.health > player.maxHealth) { // Ensure the player isn't healed past Max Health.\r\n\t\t\tplayer.health = player.maxHealth;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class WaterC4 extends Water {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n        this._name = \"C4\";\r\n\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 22;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 18;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Clarity: Increases the Intelligence of all ally Elementals.\r\n\t\tlet buff = Math.round(this.inteligence * this.abilityMod);\r\n\r\n\t\tconsole.log(`${this.getType()} buffing all ally Elementals Inteligence by: ${buff}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].inteligence = buff;\r\n\t\t\tplayer.elemental[i].buffTime[stat.inteligence] = 1;\r\n\t\t}\r\n\t}\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346151389
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\fire.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\fire.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\fire.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\fire.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "fire.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FireC4 = exports.FireC3 = exports.FireC2 = exports.FireC1 = exports.Fire = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Fire =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Fire, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Fire() {\n    var _this;\n\n    _classCallCheck(this, Fire);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Fire).call(this));\n    _this._type = _enum.type.fire;\n    _this._shieldType = _this.type;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Fire;\n}(_elemental.Elemental);\n\nexports.Fire = Fire;\n\nvar FireC1 =\n/*#__PURE__*/\nfunction (_Fire) {\n  _inherits(FireC1, _Fire);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC1() {\n    var _this2;\n\n    _classCallCheck(this, FireC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(FireC1).call(this));\n    _this2._name = \"C1\"; // Main Stats\n\n    _this2._baseStrength = 40;\n    _this2._baseConstitution = 15;\n    _this2._baseInteligence = 5;\n    _this2._baseAgility = 7; // Secondary Stats\n\n    _this2.health = _this2.maxHealth;\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(FireC1, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Direct Damage\n      var dmg = Math.round(this.strength + this.abilityMod * this.strength);\n      console.log(\"Dealing \".concat(dmg, \" Damage directly to the player\"));\n      enemy.health -= dmg;\n    }\n  }]);\n\n  return FireC1;\n}(Fire);\n\nexports.FireC1 = FireC1;\n\nvar FireC2 =\n/*#__PURE__*/\nfunction (_Fire2) {\n  _inherits(FireC2, _Fire2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC2() {\n    var _this3;\n\n    _classCallCheck(this, FireC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(FireC2).call(this));\n    _this3._name = \"C2\"; // Main Stats\n\n    _this3._baseStrength = 40;\n    _this3._baseConstitution = 18;\n    _this3._baseInteligence = 5;\n    _this3._baseAgility = 17; // Secondary Stats\n\n    _this3.health = _this3.maxHealth;\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(FireC2, [{\n    key: \"calculateDmg\",\n    value: function calculateDmg(enemy) {\n      // Armor Penetration\n      // Instead of an Ability FireC2 gets a modified calculateDmg allowing it to ignore Defense and Barriers.\n      return Math.round(this.damage * this.multiplier(enemy));\n    }\n  }]);\n\n  return FireC2;\n}(Fire);\n\nexports.FireC2 = FireC2;\n\nvar FireC3 =\n/*#__PURE__*/\nfunction (_Fire3) {\n  _inherits(FireC3, _Fire3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC3() {\n    var _this4;\n\n    _classCallCheck(this, FireC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(FireC3).call(this));\n    _this4._name = \"C3\"; // Main Stats\n\n    _this4._baseStrength = 32;\n    _this4._baseConstitution = 25;\n    _this4._baseInteligence = 10;\n    _this4._baseAgility = 5; // Secondary Stats\n\n    _this4.health = _this4.maxHealth;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(FireC3, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Shield of Flames\n      // Increases the Damage Shield of every friendly elemental.\n      var buff = Math.round(this.strength * 0.5 * this.abilityMod);\n      console.log(\"Buffing ally Damage Shield by \".concat(buff));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].damageShield = buff;\n        player.elemental[i]._shieldType = this.type;\n        player.elemental[i].buffTime[_enum.stat.damageShield] = 1;\n      }\n    }\n  }]);\n\n  return FireC3;\n}(Fire);\n\nexports.FireC3 = FireC3;\n\nvar FireC4 =\n/*#__PURE__*/\nfunction (_Fire4) {\n  _inherits(FireC4, _Fire4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function FireC4() {\n    var _this5;\n\n    _classCallCheck(this, FireC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(FireC4).call(this));\n    _this5._name = \"C4\"; // Main Stats\n\n    _this5._baseStrength = 32;\n    _this5._baseConstitution = 20;\n    _this5._baseInteligence = 15;\n    _this5._baseAgility = 5; // Secondary Stats\n\n    _this5.health = _this5.maxHealth;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(FireC4, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Sacred Flame: Increases the strength of each friendly Elemental by buff.\n      var buff = Math.round(this.strength * 0.1 * this.abilityMod);\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].strength = buff;\n        player.elemental[i].buffTime[_enum.stat.strength] = 1;\n      }\n    }\n  }]);\n\n  return FireC4;\n}(Fire);\n\nexports.FireC4 = FireC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "fire.js"
      ],
      "names": [
        "Fire",
        "_type",
        "type",
        "fire",
        "_shieldType",
        "Elemental",
        "FireC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "health",
        "maxHealth",
        "player",
        "enemy",
        "dmg",
        "Math",
        "round",
        "strength",
        "abilityMod",
        "console",
        "log",
        "FireC2",
        "damage",
        "multiplier",
        "FireC3",
        "buff",
        "i",
        "elemental",
        "length",
        "damageShield",
        "buffTime",
        "stat",
        "FireC4"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type, stat} from '../../src/enum.js';\r\nimport {Elemental} from './elemental.js';\r\n\r\nexport class Fire extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n\t\tthis._type = type.fire;\r\n\t\tthis._shieldType = this.type;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class FireC1 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 40;\r\n\t\tthis._baseConstitution = 15;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 7;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Direct Damage\r\n\t\tlet dmg = Math.round(this.strength + (this.abilityMod * this.strength));\r\n\r\n\t\tconsole.log(`Dealing ${dmg} Damage directly to the player`);\r\n\t\tenemy.health -= dmg;\r\n\t}\r\n}\r\n\r\nexport class FireC2 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 40;\r\n\t\tthis._baseConstitution = 18;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 17;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tcalculateDmg(enemy) { // Armor Penetration\r\n\t\t// Instead of an Ability FireC2 gets a modified calculateDmg allowing it to ignore Defense and Barriers.\r\n\t\treturn Math.round(this.damage * this.multiplier(enemy));\r\n    }\r\n}\r\n\r\nexport class FireC3 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C3\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 32;\r\n\t\tthis._baseConstitution = 25;\r\n\t\tthis._baseInteligence = 10;\r\n\t\tthis._baseAgility = 5;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Shield of Flames\r\n\t\t// Increases the Damage Shield of every friendly elemental.\r\n\t\tlet buff = Math.round((this.strength * 0.5) * this.abilityMod);\r\n\t\tconsole.log(`Buffing ally Damage Shield by ${buff}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].damageShield = buff;\r\n\t\t\tplayer.elemental[i]._shieldType = this.type;\r\n\t\t\tplayer.elemental[i].buffTime[stat.damageShield] = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class FireC4 extends Fire {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C4\";\r\n\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 32;\r\n\t\tthis._baseConstitution = 20;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 5;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Sacred Flame: Increases the strength of each friendly Elemental by buff.\r\n\t\tlet buff = Math.round((this.strength * 0.1) * this.abilityMod);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].strength = buff;\r\n\t\t\tplayer.elemental[i].buffTime[stat.strength] = 1;\r\n\t\t}\r\n\t}\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562344694661
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\elementals\\\\wind.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\wind.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\wind.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals\\wind.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
        "sourceFileName": "wind.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindC4 = exports.WindC3 = exports.WindC2 = exports.WindC1 = exports.Wind = void 0;\n\nvar _enum = require(\"../../src/enum.js\");\n\nvar _elemental = require(\"./elemental.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Wind =\n/*#__PURE__*/\nfunction (_Elemental) {\n  _inherits(Wind, _Elemental);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Wind() {\n    var _this;\n\n    _classCallCheck(this, Wind);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wind).call(this));\n    _this._type = _enum.type.wind;\n    _this._shieldType = _this.type;\n    return _this;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return Wind;\n}(_elemental.Elemental);\n\nexports.Wind = Wind;\n\nvar WindC1 =\n/*#__PURE__*/\nfunction (_Wind) {\n  _inherits(WindC1, _Wind);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC1() {\n    var _this2;\n\n    _classCallCheck(this, WindC1);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WindC1).call(this));\n    _this2._name = \"C1\"; // Main Stats\n\n    _this2._baseStrength = 25;\n    _this2._baseConstitution = 25;\n    _this2._baseInteligence = 5;\n    _this2._baseAgility = 30; // Secondary Stats\n\n    _this2.health = _this2.maxHealth;\n    _this2.doubleStrike = true; // In place of ability; Hit the enemy's Elemental twice, once after the opponent has gone.\n\n    return _this2;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  return WindC1;\n}(Wind);\n\nexports.WindC1 = WindC1;\n\nvar WindC2 =\n/*#__PURE__*/\nfunction (_Wind2) {\n  _inherits(WindC2, _Wind2);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC2() {\n    var _this3;\n\n    _classCallCheck(this, WindC2);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(WindC2).call(this));\n    _this3._name = \"C2\"; // Main Stats\n\n    _this3._baseStrength = 20;\n    _this3._baseConstitution = 20;\n    _this3._baseInteligence = 5;\n    _this3._baseAgility = 15; // Secondary Stats\n\n    _this3.health = _this3.maxHealth;\n    return _this3;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WindC2, [{\n    key: \"attack\",\n    value: function attack(enemy) {\n      // Life Leech\n      // In place of Ability; attacks from Elemental Heal itself.\n      enemy.attack.call(this, enemy);\n      var heal = (this.calculateDmg(enemy) - enemy.defense) * (this.abilityMod + 2);\n      console.log(\"Healing self with Life Leech for \".concat(heal));\n      this.health += heal;\n    }\n  }]);\n\n  return WindC2;\n}(Wind);\n\nexports.WindC2 = WindC2;\n\nvar WindC3 =\n/*#__PURE__*/\nfunction (_Wind3) {\n  _inherits(WindC3, _Wind3);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC3() {\n    var _this4;\n\n    _classCallCheck(this, WindC3);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(WindC3).call(this));\n    _this4._name = \"C3\"; // Main Stats\n\n    _this4._baseStrength = 20;\n    _this4._baseConstitution = 20;\n    _this4._baseInteligence = 12;\n    _this4._baseAgility = 18; // Secondary Stats\n\n    _this4.health = _this4.maxHealth;\n    return _this4;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WindC3, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Vortex\n      // Increases the Damage Shield of every friendly elemental.\n      var buff = Math.round(this.strength * 0.7 * this.abilityMod);\n      console.log(\"Buffing ally Damage Shield by \".concat(buff));\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].damageShield = buff;\n        player.elemental[i]._shieldType = this.type;\n        player.elemental[i].buffTime[_enum.stat.damageShield] = 1;\n      }\n    }\n  }]);\n\n  return WindC3;\n}(Wind);\n\nexports.WindC3 = WindC3;\n\nvar WindC4 =\n/*#__PURE__*/\nfunction (_Wind4) {\n  _inherits(WindC4, _Wind4);\n\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function WindC4() {\n    var _this5;\n\n    _classCallCheck(this, WindC4);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(WindC4).call(this));\n    _this5._name = \"C4\"; // Main Stats\n\n    _this5._baseStrength = 25;\n    _this5._baseConstitution = 22;\n    _this5._baseInteligence = 15;\n    _this5._baseAgility = 18; // Secondary Stats\n\n    _this5.health = _this5.maxHealth;\n    return _this5;\n  }\n  /*********************\r\n  ****** Getters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Setters *******\r\n  *********************/\n\n  /*********************\r\n  ****** Methods *******\r\n  *********************/\n\n\n  _createClass(WindC4, [{\n    key: \"ability\",\n    value: function ability(player, enemy) {\n      // Haste\n      var buff = Math.round(this.agility * 0.1 * this.abilityMod);\n\n      for (var i = 0; i < player.elemental.length; i++) {\n        player.elemental[i].strength = buff;\n        player.elemental[i].buffTime[_enum.stat.agility] = 1;\n      }\n    }\n  }]);\n\n  return WindC4;\n}(Wind);\n\nexports.WindC4 = WindC4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpbmQuanMiXSwibmFtZXMiOlsiV2luZCIsIl90eXBlIiwidHlwZSIsIndpbmQiLCJfc2hpZWxkVHlwZSIsIkVsZW1lbnRhbCIsIldpbmRDMSIsIl9uYW1lIiwiX2Jhc2VTdHJlbmd0aCIsIl9iYXNlQ29uc3RpdHV0aW9uIiwiX2Jhc2VJbnRlbGlnZW5jZSIsIl9iYXNlQWdpbGl0eSIsImhlYWx0aCIsIm1heEhlYWx0aCIsImRvdWJsZVN0cmlrZSIsIldpbmRDMiIsImVuZW15IiwiYXR0YWNrIiwiY2FsbCIsImhlYWwiLCJjYWxjdWxhdGVEbWciLCJkZWZlbnNlIiwiYWJpbGl0eU1vZCIsImNvbnNvbGUiLCJsb2ciLCJXaW5kQzMiLCJwbGF5ZXIiLCJidWZmIiwiTWF0aCIsInJvdW5kIiwic3RyZW5ndGgiLCJpIiwiZWxlbWVudGFsIiwibGVuZ3RoIiwiZGFtYWdlU2hpZWxkIiwiYnVmZlRpbWUiLCJzdGF0IiwiV2luZEM0IiwiYWdpbGl0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVhQSxJOzs7OztBQUNaOzs7QUFJQSxrQkFBYztBQUFBOztBQUFBOztBQUNQO0FBQ04sVUFBS0MsS0FBTCxHQUFhQyxXQUFLQyxJQUFsQjtBQUNBLFVBQUtDLFdBQUwsR0FBbUIsTUFBS0YsSUFBeEI7QUFIYTtBQUliO0FBRUQ7Ozs7QUFJQTs7OztBQUlBOzs7Ozs7RUFuQnlCRyxvQjs7OztJQXdCYkMsTTs7Ozs7QUFDWjs7O0FBSUEsb0JBQWM7QUFBQTs7QUFBQTs7QUFDYjtBQUNBLFdBQUtDLEtBQUwsR0FBYSxJQUFiLENBRmEsQ0FJYjs7QUFDQSxXQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsV0FBS0MsaUJBQUwsR0FBeUIsRUFBekI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBLFdBQUtDLFlBQUwsR0FBb0IsRUFBcEIsQ0FSYSxDQVViOztBQUNBLFdBQUtDLE1BQUwsR0FBYyxPQUFLQyxTQUFu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Q0MsS0FBTCxDQUFZLEtBQUtTLE9BQUwsR0FBZSxHQUFoQixHQUF1QixLQUFLaEIsVUFBdkMsQ0FBWDs7QUFDQSxXQUFLLElBQUlTLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdMLE1BQU0sQ0FBQ00sU0FBUCxDQUFpQkMsTUFBckMsRUFBNkNGLENBQUMsRUFBOUMsRUFBa0Q7QUFDakRMLFFBQUFBLE1BQU0sQ0FBQ00sU0FBUCxDQUFpQkQsQ0FBakIsRUFBb0JELFFBQXBCLEdBQStCSCxJQUEvQjtBQUNBRCxRQUFBQSxNQUFNLENBQUNNLFNBQVAsQ0FBaUJELENBQWpCLEVBQW9CSSxRQUFwQixDQUE2QkMsV0FBS0UsT0FBbEMsSUFBNkMsQ0FBN0M7QUFDQTtBQUNEOzs7O0VBcEMwQnRDLEkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkb2dnaVxcZG9jdW1lbnRzXFx0ZW90bFxcb2JqZWN0c1xcZWxlbWVudGFscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dHlwZSwgc3RhdH0gZnJvbSAnLi4vLi4vc3JjL2VudW0uanMnO1xyXG5pbXBvcnQge0VsZW1lbnRhbH0gZnJvbSAnLi9lbGVtZW50YWwuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFdpbmQgZXh0ZW5kcyBFbGVtZW50YWwge1xyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqIENvbnN0cnVjdG9yICoqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG5cdFx0dGhpcy5fdHlwZSA9IHR5cGUud2luZDtcclxuXHRcdHRoaXMuX3NoaWVsZFR5cGUgPSB0aGlzLnR5cGU7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgV2luZEMxIGV4dGVuZHMgV2luZCB7XHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKiogQ29uc3RydWN0b3IgKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoKTtcclxuXHRcdHRoaXMuX25hbWUgPSBcIkMxXCI7XHJcblxyXG5cdFx0Ly8gTWFpbiBTdGF0c1xyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gMjU7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMjU7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSA1O1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSAzMDtcclxuXHJcblx0XHQvLyBTZWNvbmRhcnkgU3RhdHNcclxuXHRcdHRoaXMuaGVhbHRoID0gdGhpcy5tYXhIZWFsdGg7XHJcblxyXG5cdFx0dGhpcy5kb3VibGVTdHJpa2UgPSB0cnVlOyAvLyBJbiBwbGFjZSBvZiBhYmlsaXR5OyBIaXQgdGhlIGVuZW15J3MgRWxlbWVudGFsIHR3aWNlLCBvbmNlIGFmdGVyIHRoZSBvcHBvbmVudCBoYXMgZ29uZS5cclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBXaW5kQzIgZXh0ZW5kcyBXaW5kIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0dGhpcy5fbmFtZSA9IFwiQzJcIjtcclxuXHJcblx0XHQvLyBNYWluIFN0YXRzXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSAyMDtcclxuXHRcdHRoaXMuX2Jhc2VDb25zdGl0dXRpb24gPSAyMDtcclxuXHRcdHRoaXMuX2Jhc2VJbnRlbGlnZW5jZSA9IDU7XHJcblx0XHR0aGlzLl9iYXNlQWdpbGl0eSA9IDE1O1xyXG5cclxuXHRcdC8vIFNlY29uZGFyeSBTdGF0c1xyXG5cdFx0dGhpcy5oZWFsdGggPSB0aGlzLm1heEhlYWx0aDtcclxuXHR9XHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogR2V0dGVycyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIFNldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBNZXRob2RzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdGF0dGFjayhlbmVteSkgeyAvLyBMaWZlIExlZWNoXHJcblx0XHQvLyBJbiBwbGFjZSBvZiBBYmlsaXR5OyBhdHRhY2tzIGZyb20gRWxlbWVudGFsIEhlYWwgaXRzZWxmLlxyXG5cdFx0ZW5lbXkuYXR0YWNrLmNhbGwodGhpcywgZW5lbXkpO1xyXG5cclxuXHRcdGxldCBoZWFsID0gKHRoaXMuY2FsY3VsYXRlRG1nKGVuZW15KSAgLSBlbmVteS5kZWZlbnNlKSAqICh0aGlzLmFiaWxpdHlNb2QgKyAyKTtcclxuXHJcblx0XHRjb25zb2xlLmxvZyhgSGVhbGluZyBzZWxmIHdpdGggTGlmZSBMZWVjaCBmb3IgJHtoZWFsfWApO1xyXG5cdFx0dGhpcy5oZWFsdGggKz0gaGVhbDtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBXaW5kQzMgZXh0ZW5kcyBXaW5kIHtcclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKiBDb25zdHJ1Y3RvciAqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0dGhpcy5fbmFtZSA9IFwiQzNcIjtcclxuXHJcblx0XHQvLyBNYWluIFN0YXRzXHJcblx0XHR0aGlzLl9iYXNlU3RyZW5ndGggPSAyMDtcclxuXHRcdHRoaXMuX2Jhc2VDb25zdGl0dXRpb24gPSAyMDtcclxuXHRcdHRoaXMuX2Jhc2VJbnRlbGlnZW5jZSA9IDEyO1xyXG5cdFx0dGhpcy5fYmFzZUFnaWxpdHkgPSAxODtcclxuXHJcblx0XHQvLyBTZWNvbmRhcnkgU3RhdHNcclxuXHRcdHRoaXMuaGVhbHRoID0gdGhpcy5tYXhIZWFsdGg7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHRhYmlsaXR5KHBsYXllciwgZW5lbXkpIHsgLy8gVm9ydGV4XHJcblx0XHQvLyBJbmNyZWFzZXMgdGhlIERhbWFnZSBTaGllbGQgb2YgZXZlcnkgZnJpZW5kbHkgZWxlbWVudGFsLlxyXG5cdFx0bGV0IGJ1ZmYgPSBNYXRoLnJvdW5kKCh0aGlzLnN0cmVuZ3RoICogMC43KSAqIHRoaXMuYWJpbGl0eU1vZCk7XHJcblx0XHRjb25zb2xlLmxvZyhgQnVmZmluZyBhbGx5IERhbWFnZSBTaGllbGQgYnkgJHtidWZmfWApO1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBwbGF5ZXIuZWxlbWVudGFsLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHBsYXllci5lbGVtZW50YWxbaV0uZGFtYWdlU2hpZWxkID0gYnVmZjtcclxuXHRcdFx0cGxheWVyLmVsZW1lbnRhbFtpXS5fc2hpZWxkVHlwZSA9IHRoaXMudHlwZTtcclxuXHRcdFx0cGxheWVyLmVsZW1lbnRhbFtpXS5idWZmVGltZVtzdGF0LmRhbWFnZVNoaWVsZF0gPSAxO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdpbmRDNCBleHRlbmRzIFdpbmQge1xyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqIENvbnN0cnVjdG9yICoqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG5cdFx0dGhpcy5fbmFtZSA9IFwiQzRcIjtcclxuXHRcdFxyXG5cdFx0Ly8gTWFpbiBTdGF0c1xyXG5cdFx0dGhpcy5fYmFzZVN0cmVuZ3RoID0gMjU7XHJcblx0XHR0aGlzLl9iYXNlQ29uc3RpdHV0aW9uID0gMjI7XHJcblx0XHR0aGlzLl9iYXNlSW50ZWxpZ2VuY2UgPSAxNTtcclxuXHRcdHRoaXMuX2Jhc2VBZ2lsaXR5ID0gMTg7XHRcclxuXHJcblx0XHQvLyBTZWNvbmRhcnkgU3RhdHNcclxuXHRcdHRoaXMuaGVhbHRoID0gdGhpcy5tYXhIZWFsdGg7XHJcblx0fVxyXG5cclxuXHQvKioqKioqKioqKioqKioqKioqKioqXHJcblx0KioqKioqIEdldHRlcnMgKioqKioqKlxyXG5cdCoqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcblx0LyoqKioqKioqKioqKioqKioqKioqKlxyXG5cdCoqKioqKiBTZXR0ZXJzICoqKioqKipcclxuXHQqKioqKioqKioqKioqKioqKioqKiovXHJcblxyXG5cdC8qKioqKioqKioqKioqKioqKioqKipcclxuXHQqKioqKiogTWV0aG9kcyAqKioqKioqXHJcblx0KioqKioqKioqKioqKioqKioqKioqL1xyXG5cdGFiaWxpdHkocGxheWVyLCBlbmVteSkgeyAvLyBIYXN0ZVxyXG5cdFx0bGV0IGJ1ZmYgPSBNYXRoLnJvdW5kKCh0aGlzLmFnaWxpdHkgKiAwLjEpICogdGhpcy5hYmlsaXR5TW9kKTtcclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgcGxheWVyLmVsZW1lbnRhbC5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRwbGF5ZXIuZWxlbWVudGFsW2ldLnN0cmVuZ3RoID0gYnVmZjtcclxuXHRcdFx0cGxheWVyLmVsZW1lbnRhbFtpXS5idWZmVGltZVtzdGF0LmFnaWxpdHldID0gMTtcclxuXHRcdH1cclxuXHR9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "wind.js"
      ],
      "names": [
        "Wind",
        "_type",
        "type",
        "wind",
        "_shieldType",
        "Elemental",
        "WindC1",
        "_name",
        "_baseStrength",
        "_baseConstitution",
        "_baseInteligence",
        "_baseAgility",
        "health",
        "maxHealth",
        "doubleStrike",
        "WindC2",
        "enemy",
        "attack",
        "call",
        "heal",
        "calculateDmg",
        "defense",
        "abilityMod",
        "console",
        "log",
        "WindC3",
        "player",
        "buff",
        "Math",
        "round",
        "strength",
        "i",
        "elemental",
        "length",
        "damageShield",
        "buffTime",
        "stat",
        "WindC4",
        "agility"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects\\elementals",
      "sourcesContent": [
        "import {type, stat} from '../../src/enum.js';\r\nimport {Elemental} from './elemental.js';\r\n\r\nexport class Wind extends Elemental {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n\t\tthis._type = type.wind;\r\n\t\tthis._shieldType = this.type;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WindC1 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C1\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 25;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 30;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\r\n\t\tthis.doubleStrike = true; // In place of ability; Hit the enemy's Elemental twice, once after the opponent has gone.\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n}\r\n\r\nexport class WindC2 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C2\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 20;\r\n\t\tthis._baseConstitution = 20;\r\n\t\tthis._baseInteligence = 5;\r\n\t\tthis._baseAgility = 15;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tattack(enemy) { // Life Leech\r\n\t\t// In place of Ability; attacks from Elemental Heal itself.\r\n\t\tenemy.attack.call(this, enemy);\r\n\r\n\t\tlet heal = (this.calculateDmg(enemy)  - enemy.defense) * (this.abilityMod + 2);\r\n\r\n\t\tconsole.log(`Healing self with Life Leech for ${heal}`);\r\n\t\tthis.health += heal;\r\n\t}\r\n}\r\n\r\nexport class WindC3 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._name = \"C3\";\r\n\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 20;\r\n\t\tthis._baseConstitution = 20;\r\n\t\tthis._baseInteligence = 12;\r\n\t\tthis._baseAgility = 18;\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\r\n\tability(player, enemy) { // Vortex\r\n\t\t// Increases the Damage Shield of every friendly elemental.\r\n\t\tlet buff = Math.round((this.strength * 0.7) * this.abilityMod);\r\n\t\tconsole.log(`Buffing ally Damage Shield by ${buff}`);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].damageShield = buff;\r\n\t\t\tplayer.elemental[i]._shieldType = this.type;\r\n\t\t\tplayer.elemental[i].buffTime[stat.damageShield] = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class WindC4 extends Wind {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor() {\r\n        super();\r\n\t\tthis._name = \"C4\";\r\n\t\t\r\n\t\t// Main Stats\r\n\t\tthis._baseStrength = 25;\r\n\t\tthis._baseConstitution = 22;\r\n\t\tthis._baseInteligence = 15;\r\n\t\tthis._baseAgility = 18;\t\r\n\r\n\t\t// Secondary Stats\r\n\t\tthis.health = this.maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n\t*********************/\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n\t*********************/\r\n\tability(player, enemy) { // Haste\r\n\t\tlet buff = Math.round((this.agility * 0.1) * this.abilityMod);\r\n\t\tfor (let i = 0; i < player.elemental.length; i++) {\r\n\t\t\tplayer.elemental[i].strength = buff;\r\n\t\t\tplayer.elemental[i].buffTime[stat.agility] = 1;\r\n\t\t}\r\n\t}\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346319953
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\objects\\\\player.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\player.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\objects\\player.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\objects\\player.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects",
        "sourceFileName": "player.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Player = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  /*********************\r\n  **** Constructor *****\r\n  *********************/\n  function Player(atomic, fire, water, earth, wind) {\n    _classCallCheck(this, Player);\n\n    this._elemental = [atomic, fire, water, earth, wind];\n    this._maxHealth = this.calculateMaxHealth();\n    this._health = this._maxHealth;\n  }\n  /*********************\r\n  ****** Getters *******\r\n     *********************/\n\n\n  _createClass(Player, [{\n    key: \"calculateMaxHealth\",\n\n    /*********************\r\n    ****** Methods *******\r\n       *********************/\n    value: function calculateMaxHealth() {\n      var health = 0;\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        health += this.elemental[i].maxHealth;\n      }\n\n      return health;\n    } // For testing purposes:\n    // Main Stats\n\n  }, {\n    key: \"listStrength\",\n    value: function listStrength() {\n      var ele;\n      console.log(\"Listing all Elementals Strength\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Strength : \").concat(ele.Strength));\n      }\n    }\n  }, {\n    key: \"listConstitution\",\n    value: function listConstitution() {\n      var ele;\n      console.log(\"Listing all Elementals Constitution\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Constitution : \").concat(ele.constitution));\n      }\n    }\n  }, {\n    key: \"listInteligence\",\n    value: function listInteligence() {\n      var ele;\n      console.log(\"Listing all Elementals Inteligence\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Inteligence : \").concat(ele.inteligence));\n      }\n    }\n  }, {\n    key: \"listAgility\",\n    value: function listAgility() {\n      var ele;\n      console.log(\"Listing all Elementals Agility\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Agility : \").concat(ele.agility));\n      }\n    } // Secondary Stats\n\n  }, {\n    key: \"listHealth\",\n    value: function listHealth() {\n      var ele;\n      console.log(\"Listing all Elementals Health\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Health : \").concat(ele.health));\n      }\n    }\n  }, {\n    key: \"listDefense\",\n    value: function listDefense() {\n      var ele;\n      console.log(\"Listing all Elementals Defense\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Defense : \").concat(ele.defense));\n      }\n    }\n  }, {\n    key: \"listDamageShield\",\n    value: function listDamageShield() {\n      var ele;\n      console.log(\"Listing all Elementals Damage Shield\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Damage Shield : \").concat(ele.damageShield));\n      }\n    }\n  }, {\n    key: \"listBarrier\",\n    value: function listBarrier() {\n      var ele;\n      console.log(\"Listing all Elementals Barrier\");\n\n      for (var i = 0; i < this.elemental.length; i++) {\n        ele = this.elemental[i];\n        console.log(\"\\n            \".concat(ele.getType(), \" Barrier : \").concat(ele.barrier));\n      }\n    }\n  }, {\n    key: \"elemental\",\n    get: function get() {\n      return this._elemental;\n    }\n  }, {\n    key: \"maxHealth\",\n    get: function get() {\n      return this.maxHealth;\n    }\n  }, {\n    key: \"health\",\n    get: function get() {\n      return this._health;\n    }\n    /*********************\r\n    ****** Setters *******\r\n       *********************/\n    ,\n    set: function set(h) {\n      if (typeof h === 'number') {\n        this._health = h;\n      } else {\n        throw new TypeError(\"Invalid Input; Health must be a number.\");\n      }\n    }\n  }]);\n\n  return Player;\n}();\n\nexports.Player = Player;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "player.js"
      ],
      "names": [
        "Player",
        "atomic",
        "fire",
        "water",
        "earth",
        "wind",
        "_elemental",
        "_maxHealth",
        "calculateMaxHealth",
        "_health",
        "health",
        "i",
        "elemental",
        "length",
        "maxHealth",
        "ele",
        "console",
        "log",
        "getType",
        "Strength",
        "constitution",
        "inteligence",
        "agility",
        "defense",
        "damageShield",
        "barrier",
        "h",
        "TypeError"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\objects",
      "sourcesContent": [
        "export class Player {\r\n\t/*********************\r\n\t**** Constructor *****\r\n\t*********************/\r\n\r\n\tconstructor(atomic,fire, water, earth, wind) {\r\n        this._elemental = [\r\n            atomic,\r\n            fire,\r\n            water,\r\n            earth,\r\n            wind,\r\n        ];\r\n\r\n        this._maxHealth = this.calculateMaxHealth();\r\n        this._health = this._maxHealth;\r\n\t}\r\n\r\n\t/*********************\r\n\t****** Getters *******\r\n    *********************/\r\n    \r\n    get elemental() {\r\n        return this._elemental;\r\n    }\r\n\r\n    get maxHealth() {\r\n        return this.maxHealth;\r\n    }\r\n\r\n    get health() {\r\n        return this._health;\r\n    }\r\n\r\n\t/*********************\r\n\t****** Setters *******\r\n    *********************/\r\n    \r\n    set health(h) {\r\n        if (typeof h === 'number') {\r\n            this._health = h;\r\n        } else {\r\n            throw new TypeError(`Invalid Input; Health must be a number.`);\r\n        }\r\n    }\r\n\r\n\t/*********************\r\n\t****** Methods *******\r\n    *********************/\r\n    \r\n    calculateMaxHealth() {\r\n        let health = 0;\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            health += this.elemental[i].maxHealth;\r\n        }\r\n        return health;\r\n    }\r\n\r\n    // For testing purposes:\r\n\r\n    // Main Stats\r\n    listStrength() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Strength`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Strength : ${ele.Strength}`);\r\n        }\r\n    }\r\n\r\n    listConstitution() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Constitution`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Constitution : ${ele.constitution}`);\r\n        }\r\n    }\r\n\r\n    listInteligence() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Inteligence`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Inteligence : ${ele.inteligence}`);\r\n        }\r\n    }\r\n\r\n    listAgility() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Agility`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Agility : ${ele.agility}`);\r\n        }\r\n    }\r\n\r\n    // Secondary Stats\r\n    listHealth() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Health`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Health : ${ele.health}`);\r\n        }\r\n    }\r\n\r\n    listDefense() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Defense`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Defense : ${ele.defense}`);\r\n        }\r\n    }\r\n\r\n    listDamageShield() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Damage Shield`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Damage Shield : ${ele.damageShield}`);\r\n        }\r\n    }\r\n\r\n    listBarrier() {\r\n        let ele;\r\n\r\n        console.log(`Listing all Elementals Barrier`);\r\n        for (let i = 0; i < this.elemental.length; i++) {\r\n            ele = this.elemental[i]\r\n        console.log(`\r\n            ${ele.getType()} Barrier : ${ele.barrier}`);\r\n        }\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1562192186005
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\scripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"filename\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\\\\scripts\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\doggi\\\\documents\\\\teotl\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\scripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\doggi\\documents\\teotl",
      "filename": "C:\\Users\\doggi\\documents\\teotl\\scripts\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\doggi\\documents\\teotl",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\doggi\\documents\\teotl\\scripts\\test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\doggi\\documents\\teotl\\scripts\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\scripts",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test_defense = test_defense;\nexports.test_barrier = test_barrier;\nexports.test_lifeLeech = test_lifeLeech;\nexports.test_intelligence = test_intelligence;\nexports.test_damageShield = test_damageShield;\n\nvar _enum = require(\"../src/enum.js\");\n\nvar _player = require(\"../objects/player.js\");\n\nvar _atomic = require(\"../objects/elementals/atomic.js\");\n\nvar _earth = require(\"../objects/elementals/earth.js\");\n\nvar _Water = require(\"../objects/elementals/Water.js\");\n\nvar _fire = require(\"../objects/elementals/fire.js\");\n\nvar _wind = require(\"../objects/elementals/wind.js\");\n\nfunction test_defense() {\n  // Tests Defense and Armor Penetration.\n  console.log(\"Running test_defense(), ensureing that Defense properly mitigates damage\\n    with the exception of FireC2's Armor Penetration\");\n  var player = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC3(), new _Water.WaterC4(), new _earth.EarthC4(), new _wind.WindC4());\n  var enemy = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC2(), new _Water.WaterC1(), new _earth.EarthC2(), new _wind.WindC4());\n  var playerEle = player.elemental[_enum.type.earth];\n  var enemyWater = enemy.elemental[_enum.type.water];\n  var enemyFire = enemy.elemental[_enum.type.fire];\n  player.listDefense();\n  enemyWater.attack(player.elemental[0]);\n  enemyFire.attack(player.elemental[0]);\n  test_ability(playerEle, player, enemy);\n  player.listDefense();\n  enemyWater.attack(player.elemental[0]);\n  enemyFire.attack(player.elemental[0]);\n}\n\nfunction test_barrier() {\n  // Tests Barrier and Armor Penetration.\n  console.log(\"Running test_barrier() ensuring Barrier properly mitigates damage\\n    with the exception of FireC2's Armor Penetration\");\n  var player = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC3(), new _Water.WaterC2(), new _earth.EarthC4(), new _wind.WindC4());\n  var enemy = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC2(), new _Water.WaterC1(), new _earth.EarthC2(), new _wind.WindC4());\n  var playerEle = player.elemental[_enum.type.water];\n  var ele = player.elemental[_enum.type.wind];\n  var ele2 = player.elemental[_enum.type.earth];\n  player.listBarrier();\n\n  enemy.elemental[_enum.type.fire].attack(ele);\n\n  enemy.elemental[_enum.type.wind].attack(ele2);\n\n  test_ability(playerEle, player, enemy);\n  player.listBarrier();\n  player.listHealth();\n\n  enemy.elemental[_enum.type.fire].attack(ele);\n\n  enemy.elemental[_enum.type.wind].attack(ele2);\n\n  player.listBarrier();\n  player.listHealth();\n}\n\nfunction test_lifeLeech() {\n  // Tests Life Leech ability.\n  console.log(\"Running test_lifeLeech() ensuring Elemental WindC2 properly heals itself\");\n  var player = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC3(), new _Water.WaterC2(), new _earth.EarthC4(), new _wind.WindC2());\n  var enemy = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC2(), new _Water.WaterC1(), new _earth.EarthC1(), new _wind.WindC4());\n  var playerEle = player.elemental[_enum.type.wind];\n  var enemyEle = enemy.elemental[_enum.type.earth];\n  playerEle.logHealth();\n\n  enemy.elemental[_enum.type.fire].attack(playerEle);\n\n  playerEle.logHealth();\n  playerEle.attack(enemyEle);\n  playerEle.logHealth();\n}\n\nfunction test_intelligence() {\n  // Tests Intelligence's affect on other abilities such as Direct Damage.\n  console.log(\"Running test_intelligence() ensuring Intelligence properly increases the strength of abilities\");\n  var player = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC1(), new _Water.WaterC4(), new _earth.EarthC4(), new _wind.WindC3());\n  var enemy = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC2(), new _Water.WaterC1(), new _earth.EarthC1(), new _wind.WindC4());\n  var playerEle = player.elemental[_enum.type.water];\n  var ele = player.elemental[_enum.type.fire];\n  console.log(\"Player health \".concat(player.health));\n  test_ability(ele, player, enemy);\n  test_ability(playerEle, player, enemy);\n  test_ability(ele, player, enemy);\n  test_ability(playerEle, player, enemy);\n  test_ability(ele, player, enemy);\n  test_ability(playerEle, player, enemy);\n  test_ability(ele, player, enemy);\n}\n\nfunction test_damageShield() {\n  // Tests Damage Shield\n  console.log(\"Running test_damageShield(), ensureing that Damage Shield works propely\");\n  var player = new _player.Player(new _atomic.AtomicC3(), new _fire.FireC3(), new _Water.WaterC2(), new _earth.EarthC3(), new _wind.WindC3());\n  var enemy = new _player.Player(new _atomic.AtomicC2(), new _fire.FireC1(), new _Water.WaterC1(), new _earth.EarthC2(), new _wind.WindC4());\n  var earthEle = player.elemental[_enum.type.earth];\n  var buffer = player.elemental[_enum.type.wind];\n  var enemyEle = enemy.elemental[_enum.type.fire];\n  player.listDamageShield();\n  test_ability(buffer, player, enemy);\n  player.listDamageShield();\n  enemyEle.logHealth();\n  enemyEle.attack(earthEle);\n  enemyEle.logHealth();\n  earthEle.attack(enemyEle);\n  enemyEle.logHealth();\n\n  enemy.elemental[_enum.type.water].attack(earthEle);\n}\n/*********************\r\n****** Internal ******\r\n****** Functions *****\r\n*********************/\n\n\nfunction test_ability(elemental, player, enemy) {\n  console.log(\"\\n        Testing \".concat(elemental.getType(), \" \").concat(elemental.name, \" ability\"));\n  elemental.ability(player, enemy);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "test_defense",
        "console",
        "log",
        "player",
        "Player",
        "AtomicC2",
        "FireC3",
        "WaterC4",
        "EarthC4",
        "WindC4",
        "enemy",
        "FireC2",
        "WaterC1",
        "EarthC2",
        "playerEle",
        "elemental",
        "type",
        "earth",
        "enemyWater",
        "water",
        "enemyFire",
        "fire",
        "listDefense",
        "attack",
        "test_ability",
        "test_barrier",
        "WaterC2",
        "ele",
        "wind",
        "ele2",
        "listBarrier",
        "listHealth",
        "test_lifeLeech",
        "WindC2",
        "EarthC1",
        "enemyEle",
        "logHealth",
        "test_intelligence",
        "FireC1",
        "WindC3",
        "health",
        "test_damageShield",
        "AtomicC3",
        "EarthC3",
        "earthEle",
        "buffer",
        "listDamageShield",
        "getType",
        "name",
        "ability"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\doggi\\documents\\teotl\\scripts",
      "sourcesContent": [
        "import {type} from '../src/enum.js';\r\nimport {Player} from '../objects/player.js';\r\n\r\nimport { AtomicC1, AtomicC2, AtomicC3, AtomicC4 } from '../objects/elementals/atomic.js';\r\nimport { EarthC1, EarthC2, EarthC3, EarthC4 } from '../objects/elementals/earth.js';\r\nimport { WaterC1, WaterC2, WaterC3, WaterC4 } from '../objects/elementals/Water.js';\r\nimport { FireC1, FireC2, FireC3, FireC4 } from '../objects/elementals/fire.js';\r\nimport { WindC1, WindC2, WindC3, WindC4 } from '../objects/elementals/wind.js';\r\n\r\n\r\nexport function test_defense() { // Tests Defense and Armor Penetration.\r\n    console.log(`Running test_defense(), ensureing that Defense properly mitigates damage\r\n    with the exception of FireC2's Armor Penetration`);\r\n\r\n    let player = new Player(\r\n        new AtomicC2,\r\n        new FireC3,\r\n        new WaterC4,\r\n        new EarthC4,\r\n        new WindC4,\r\n    );\r\n\r\n    let enemy = new Player(\r\n        new AtomicC2,\r\n        new FireC2,\r\n        new WaterC1,\r\n        new EarthC2,\r\n        new WindC4,\r\n    ); \r\n\r\n\r\n    let playerEle = player.elemental[type.earth];\r\n\r\n    let enemyWater = enemy.elemental[type.water];\r\n    let enemyFire = enemy.elemental[type.fire];\r\n\r\n    player.listDefense();\r\n    \r\n    enemyWater.attack(player.elemental[0]);\r\n    enemyFire.attack(player.elemental[0]);\r\n\r\n    test_ability(playerEle, player, enemy);\r\n    player.listDefense();\r\n\r\n    enemyWater.attack(player.elemental[0]);\r\n    enemyFire.attack(player.elemental[0]);\r\n}\r\n\r\nexport function test_barrier() { // Tests Barrier and Armor Penetration.\r\n    console.log(`Running test_barrier() ensuring Barrier properly mitigates damage\r\n    with the exception of FireC2's Armor Penetration`);\r\n\r\n    let player = new Player(\r\n        new AtomicC2,\r\n        new FireC3,\r\n        new WaterC2,\r\n        new EarthC4,\r\n        new WindC4,\r\n    );\r\n\r\n    let enemy = new Player(\r\n        new AtomicC2,\r\n        new FireC2,\r\n        new WaterC1,\r\n        new EarthC2,\r\n        new WindC4,\r\n    ); \r\n\r\n\r\n    let playerEle = player.elemental[type.water];\r\n    let ele = player.elemental[type.wind];\r\n    let ele2 = player.elemental[type.earth];\r\n\r\n    player.listBarrier();\r\n\r\n    enemy.elemental[type.fire].attack(ele);\r\n    enemy.elemental[type.wind].attack(ele2);\r\n\r\n    test_ability(playerEle, player, enemy);\r\n\r\n    player.listBarrier();\r\n    player.listHealth();\r\n    \r\n    enemy.elemental[type.fire].attack(ele);\r\n    enemy.elemental[type.wind].attack(ele2);\r\n\r\n    player.listBarrier();\r\n    player.listHealth();\r\n}\r\n\r\nexport function test_lifeLeech() { // Tests Life Leech ability.\r\n    console.log(`Running test_lifeLeech() ensuring Elemental WindC2 properly heals itself`);\r\n\r\n    let player = new Player(\r\n        new AtomicC2,\r\n        new FireC3,\r\n        new WaterC2,\r\n        new EarthC4,\r\n        new WindC2,\r\n    );\r\n\r\n    let enemy = new Player(\r\n        new AtomicC2,\r\n        new FireC2,\r\n        new WaterC1,\r\n        new EarthC1,\r\n        new WindC4,\r\n    ); \r\n\r\n    let playerEle = player.elemental[type.wind];\r\n    let enemyEle = enemy.elemental[type.earth];\r\n\r\n    playerEle.logHealth();\r\n\r\n    enemy.elemental[type.fire].attack(playerEle);\r\n\r\n    playerEle.logHealth();\r\n\r\n    playerEle.attack(enemyEle);\r\n\r\n    playerEle.logHealth();\r\n}\r\n\r\nexport function test_intelligence() { // Tests Intelligence's affect on other abilities such as Direct Damage.\r\n    console.log(`Running test_intelligence() ensuring Intelligence properly increases the strength of abilities`);\r\n\r\n    let player = new Player(\r\n        new AtomicC2,\r\n        new FireC1,\r\n        new WaterC4,\r\n        new EarthC4,\r\n        new WindC3,\r\n    );\r\n\r\n    let enemy = new Player(\r\n        new AtomicC2,\r\n        new FireC2,\r\n        new WaterC1,\r\n        new EarthC1,\r\n        new WindC4,\r\n    ); \r\n\r\n    let playerEle = player.elemental[type.water];\r\n    let ele = player.elemental[type.fire];\r\n    \r\n    console.log(`Player health ${player.health}`);\r\n\r\n    test_ability(ele, player, enemy);\r\n\r\n    test_ability(playerEle, player, enemy);\r\n\r\n    test_ability(ele, player, enemy);\r\n\r\n    test_ability(playerEle, player, enemy);\r\n\r\n    test_ability(ele, player, enemy);\r\n\r\n    test_ability(playerEle, player, enemy);\r\n\r\n    test_ability(ele, player, enemy);\r\n}\r\n\r\nexport function test_damageShield() { // Tests Damage Shield\r\n    console.log(`Running test_damageShield(), ensureing that Damage Shield works propely`);\r\n\r\n    let player = new Player(\r\n        new AtomicC3,\r\n        new FireC3,\r\n        new WaterC2,\r\n        new EarthC3,\r\n        new WindC3,\r\n    );\r\n\r\n    let enemy = new Player(\r\n        new AtomicC2,\r\n        new FireC1,\r\n        new WaterC1,\r\n        new EarthC2,\r\n        new WindC4,\r\n    ); \r\n\r\n    let earthEle = player.elemental[type.earth];\r\n    let buffer = player.elemental[type.wind]\r\n    let enemyEle = enemy.elemental[type.fire];\r\n\r\n    player.listDamageShield();\r\n    test_ability(buffer, player, enemy);\r\n    player.listDamageShield();\r\n\r\n    enemyEle.logHealth();\r\n    enemyEle.attack(earthEle);\r\n    enemyEle.logHealth();\r\n\r\n\r\n    earthEle.attack(enemyEle);\r\n    enemyEle.logHealth();\r\n\r\n    enemy.elemental[type.water].attack(earthEle);\r\n}\r\n\r\n    \r\n\r\n\r\n/*********************\r\n****** Internal ******\r\n****** Functions *****\r\n*********************/\r\n\r\nfunction test_ability(elemental, player, enemy) {\r\n    console.log(`\r\n        Testing ${elemental.getType()} ${elemental.name} ability`);\r\n    elemental.ability(player, enemy);\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562346201798
  }
}